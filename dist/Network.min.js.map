{"version":3,"sources":["Network.min.js"],"names":["_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_classCallCheck","instance","Constructor","_createClass","defineProperties","target","props","descriptor","defineProperty","key","protoProps","staticProps","FCLayer","size","importedData","this","neurons","concat","map","n","ni","Neuron","undefined","state","layer","nextLayer","_this","prevLayer","forEach","neuron","imported","weights","net","weightsInitFn","weightsConfig","bias","Math","random","init","adaptiveLR","activationConfig","eluAlpha","data","_this2","dropped","dropout","activation","sum","pNeuron","pni","expected","_this3","error","deltaBias","derivative","reduce","p","c","weight","wi","deltaWeights","l2","l1","miniBatchSize","Layer","_FCLayer","_len","arguments","args","_key","getPrototypeOf","window","exports","NetMath","prime","val","exp","pow","max","lreluSlope","abs","rreluSlope","sech","tanh","elu","output","vi","log","calculated","desired","index","prev","curr","deltaValue","learningRate","weightI","newVal","biasGain","weightGains","min","weightsCache","biasCache","sqrt","rmsDecay","m","mt","iterations","v","vt","rho","adadeltaCache","_newVal","adadeltaBiasCache","_ref","limit","_ref2","mean","stdDeviation","x1","x2","r","_ref3","fanIn","fanOut","gaussian","lecunnormal","_ref4","uniform","lecununiform","_ref5","_ref6","values","total","avg","diffs","maxNormTotal","maxNorm","multiplier","layers","li","w","NetUtil","type","replace","toLowerCase","date","Date","formatted","push","getMilliseconds","getHours","getMinutes","getSeconds","join","j","floor","x","zP","extraColumns","row","extraRows","slice","square","l","ri","_ri","_vi","fS","sumMap","_l","t","Network","_ref7","_ref7$layers","_ref7$adaptiveLR","_ref7$activation","_ref7$cost","cost","_ref7$dropout","_ref7$l","_ref7$l2","epochs","format","l2Error","l1Error","includes","weightUpdateFn","bind","distribution","every","item","Number","isInteger","initLayers","definedLayers","Error","input","_this5","hidden","round","ceil","joinLayer","layerIndex","assign","assignNext","assignPrev","console","warn","forward","backward","dataSet","_this6","_ref8","_ref8$epochs","callback","_ref8$log","_ref8$miniBatchSize","_ref8$shuffle","shuffle","Promise","resolve","reject","iterationIndex","epochsCounter","startTime","now","doEpoch","doIteration","hasOwnProperty","applyDeltaWeights","resetDeltaWeights","iterationError","elapsed","setTimeout","testSet","_this7","_ref9","_ref9$log","totalError","testInput","dw","_this8","dwi","_ref10"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FCLayer = function () {\n    function FCLayer(size, importedData) {\n        _classCallCheck(this, FCLayer);\n\n        this.size = size;\n        this.neurons = [].concat(_toConsumableArray(new Array(size))).map(function (n, ni) {\n            return new Neuron(importedData ? importedData[ni] : undefined);\n        });\n        this.state = \"not-initialised\";\n    }\n\n    _createClass(FCLayer, [{\n        key: \"assignNext\",\n        value: function assignNext(layer) {\n            this.nextLayer = layer;\n        }\n    }, {\n        key: \"assignPrev\",\n        value: function assignPrev(layer) {\n            var _this = this;\n\n            this.prevLayer = layer;\n            this.neurons.forEach(function (neuron) {\n\n                if (!neuron.imported) {\n                    neuron.weights = _this.net.weightsInitFn(layer.size, _this.weightsConfig);\n                    neuron.bias = Math.random() * 0.2 - 0.1;\n                }\n\n                neuron.init(layer.size, {\n                    adaptiveLR: _this.net.adaptiveLR,\n                    activationConfig: _this.net.activationConfig,\n                    eluAlpha: _this.net.eluAlpha\n                });\n            });\n            this.state = \"initialised\";\n        }\n    }, {\n        key: \"forward\",\n        value: function forward(data) {\n            var _this2 = this;\n\n            this.neurons.forEach(function (neuron, ni) {\n\n                if (_this2.state == \"training\" && (neuron.dropped = Math.random() > _this2.net.dropout)) {\n                    neuron.activation = 0;\n                } else {\n                    neuron.sum = neuron.bias;\n                    _this2.prevLayer.neurons.forEach(function (pNeuron, pni) {\n                        return neuron.sum += pNeuron.activation * neuron.weights[pni];\n                    });\n                    neuron.activation = _this2.activation(neuron.sum, false, neuron) / (_this2.net.dropout | 1);\n                }\n            });\n        }\n    }, {\n        key: \"backward\",\n        value: function backward(expected) {\n            var _this3 = this;\n\n            this.neurons.forEach(function (neuron, ni) {\n\n                if (neuron.dropped) {\n                    neuron.error = 0;\n                    neuron.deltaBias = 0;\n                } else {\n                    if (typeof expected !== \"undefined\") {\n                        neuron.error = expected[ni] - neuron.activation;\n                    } else {\n                        neuron.derivative = _this3.activation(neuron.sum, true, neuron);\n                        neuron.error = neuron.derivative * _this3.nextLayer.neurons.map(function (n) {\n                            return n.error * (n.weights[ni] | 0);\n                        }).reduce(function (p, c) {\n                            return p + c;\n                        }, 0);\n                    }\n\n                    neuron.weights.forEach(function (weight, wi) {\n                        neuron.deltaWeights[wi] += neuron.error * _this3.prevLayer.neurons[wi].activation * (1 + ((_this3.net.l2 || 0) + (_this3.net.l1 || 0)) / _this3.net.miniBatchSize * neuron.deltaWeights[wi]);\n                    });\n\n                    neuron.deltaBias = neuron.error;\n                }\n            });\n        }\n    }]);\n\n    return FCLayer;\n}();\n\nvar Layer = function (_FCLayer) {\n    _inherits(Layer, _FCLayer);\n\n    function Layer() {\n        _classCallCheck(this, Layer);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _possibleConstructorReturn(this, (Layer.__proto__ || Object.getPrototypeOf(Layer)).call(this, args));\n    }\n\n    return Layer;\n}(FCLayer);\n\ntypeof window == \"undefined\" && (exports.FCLayer = exports.Layer = FCLayer);\n\"use strict\";\n\nvar NetMath = function () {\n    function NetMath() {\n        _classCallCheck(this, NetMath);\n    }\n\n    _createClass(NetMath, null, [{\n        key: \"sigmoid\",\n\n\n        // Activation functions\n        value: function sigmoid(value, prime) {\n            var val = 1 / (1 + Math.exp(-value));\n            return prime ? val * (1 - val) : val;\n        }\n    }, {\n        key: \"tanh\",\n        value: function tanh(value, prime) {\n            var exp = Math.exp(2 * value);\n            return prime ? 4 / Math.pow(Math.exp(value) + Math.exp(-value), 2) || 1e-18 : (exp - 1) / (exp + 1) || 1e-18;\n        }\n    }, {\n        key: \"relu\",\n        value: function relu(value, prime) {\n            return prime ? value > 0 ? 1 : 0 : Math.max(value, 0);\n        }\n    }, {\n        key: \"lrelu\",\n        value: function lrelu(value, prime) {\n            return prime ? value > 0 ? 1 : this.lreluSlope : Math.max(this.lreluSlope * Math.abs(value), value);\n        }\n    }, {\n        key: \"rrelu\",\n        value: function rrelu(value, prime, neuron) {\n            return prime ? value > 0 ? 1 : neuron.rreluSlope : Math.max(neuron.rreluSlope, value);\n        }\n    }, {\n        key: \"lecuntanh\",\n        value: function lecuntanh(value, prime) {\n            return prime ? 1.15333 * Math.pow(NetMath.sech(2 / 3 * value), 2) : 1.7159 * NetMath.tanh(2 / 3 * value);\n        }\n    }, {\n        key: \"elu\",\n        value: function elu(value, prime, neuron) {\n            return prime ? value >= 0 ? 1 : NetMath.elu(value, false, neuron) + neuron.eluAlpha : value >= 0 ? value : neuron.eluAlpha * (Math.exp(value) - 1);\n        }\n\n        // Cost functions\n\n    }, {\n        key: \"crossentropy\",\n        value: function crossentropy(target, output) {\n            return output.map(function (value, vi) {\n                return target[vi] * Math.log(value + 1e-15) + (1 - target[vi]) * Math.log(1 + 1e-15 - value);\n            }).reduce(function (p, c) {\n                return p - c;\n            }, 0);\n        }\n    }, {\n        key: \"meansquarederror\",\n        value: function meansquarederror(calculated, desired) {\n            return calculated.map(function (output, index) {\n                return Math.pow(output - desired[index], 2);\n            }).reduce(function (prev, curr) {\n                return prev + curr;\n            }, 0) / calculated.length;\n        }\n\n        // Weight updating functions\n\n    }, {\n        key: \"noadaptivelr\",\n        value: function noadaptivelr(value, deltaValue) {\n            return value + this.learningRate * deltaValue;\n        }\n    }, {\n        key: \"gain\",\n        value: function gain(value, deltaValue, neuron, weightI) {\n\n            var newVal = value + this.learningRate * deltaValue * (weightI == null ? neuron.biasGain : neuron.weightGains[weightI]);\n\n            if (newVal <= 0 && value > 0 || newVal >= 0 && value < 0) {\n                if (weightI != null) {\n                    neuron.weightGains[weightI] = Math.max(neuron.weightGains[weightI] * 0.95, 0.5);\n                } else {\n                    neuron.biasGain = Math.max(neuron.biasGain * 0.95, 0.5);\n                }\n            } else {\n                if (weightI != null) {\n                    neuron.weightGains[weightI] = Math.min(neuron.weightGains[weightI] + 0.05, 5);\n                } else {\n                    neuron.biasGain = Math.min(neuron.biasGain + 0.05, 5);\n                }\n            }\n\n            return newVal;\n        }\n    }, {\n        key: \"adagrad\",\n        value: function adagrad(value, deltaValue, neuron, weightI) {\n\n            if (weightI != null) {\n                neuron.weightsCache[weightI] += Math.pow(deltaValue, 2);\n            } else {\n                neuron.biasCache += Math.pow(deltaValue, 2);\n            }\n\n            return value + this.learningRate * deltaValue / (1e-6 + Math.sqrt(weightI != null ? neuron.weightsCache[weightI] : neuron.biasCache));\n        }\n    }, {\n        key: \"rmsprop\",\n        value: function rmsprop(value, deltaValue, neuron, weightI) {\n\n            if (weightI != null) {\n                neuron.weightsCache[weightI] = this.rmsDecay * neuron.weightsCache[weightI] + (1 - this.rmsDecay) * Math.pow(deltaValue, 2);\n            } else {\n                neuron.biasCache = this.rmsDecay * neuron.biasCache + (1 - this.rmsDecay) * Math.pow(deltaValue, 2);\n            }\n\n            return value + this.learningRate * deltaValue / (1e-6 + Math.sqrt(weightI != null ? neuron.weightsCache[weightI] : neuron.biasCache));\n        }\n    }, {\n        key: \"adam\",\n        value: function adam(value, deltaValue, neuron) {\n\n            neuron.m = 0.9 * neuron.m + (1 - 0.9) * deltaValue;\n            var mt = neuron.m / (1 - Math.pow(0.9, this.iterations + 1));\n\n            neuron.v = 0.999 * neuron.v + (1 - 0.999) * Math.pow(deltaValue, 2);\n            var vt = neuron.v / (1 - Math.pow(0.999, this.iterations + 1));\n\n            return value + this.learningRate * mt / (Math.sqrt(vt) + 1e-8);\n        }\n    }, {\n        key: \"adadelta\",\n        value: function adadelta(value, deltaValue, neuron, weightI) {\n\n            if (weightI != null) {\n                neuron.weightsCache[weightI] = this.rho * neuron.weightsCache[weightI] + (1 - this.rho) * Math.pow(deltaValue, 2);\n                var newVal = value + Math.sqrt((neuron.adadeltaCache[weightI] + 1e-6) / (neuron.weightsCache[weightI] + 1e-6)) * deltaValue;\n                neuron.adadeltaCache[weightI] = this.rho * neuron.adadeltaCache[weightI] + (1 - this.rho) * Math.pow(deltaValue, 2);\n                return newVal;\n            } else {\n                neuron.biasCache = this.rho * neuron.biasCache + (1 - this.rho) * Math.pow(deltaValue, 2);\n                var _newVal = value + Math.sqrt((neuron.adadeltaBiasCache + 1e-6) / (neuron.biasCache + 1e-6)) * deltaValue;\n                neuron.adadeltaBiasCache = this.rho * neuron.adadeltaBiasCache + (1 - this.rho) * Math.pow(deltaValue, 2);\n                return _newVal;\n            }\n        }\n\n        // Weights init\n\n    }, {\n        key: \"uniform\",\n        value: function uniform(size, _ref) {\n            var limit = _ref.limit;\n\n            return [].concat(_toConsumableArray(new Array(size))).map(function (v) {\n                return Math.random() * 2 * limit - limit;\n            });\n        }\n    }, {\n        key: \"gaussian\",\n        value: function gaussian(size, _ref2) {\n            var mean = _ref2.mean,\n                stdDeviation = _ref2.stdDeviation;\n\n            return [].concat(_toConsumableArray(new Array(size))).map(function () {\n                // Polar Box Muller\n                var x1 = void 0,\n                    x2 = void 0,\n                    r = void 0,\n                    y = void 0;\n\n                do {\n                    x1 = 2 * Math.random() - 1;\n                    x2 = 2 * Math.random() - 1;\n                    r = Math.pow(x1, 2) + Math.pow(x2, 2);\n                } while (r >= 1 || !r);\n\n                return mean + x1 * Math.sqrt(-2 * Math.log(r) / r) * stdDeviation;\n            });\n        }\n    }, {\n        key: \"xaviernormal\",\n        value: function xaviernormal(size, _ref3) {\n            var fanIn = _ref3.fanIn,\n                fanOut = _ref3.fanOut;\n\n            return fanOut || fanOut == 0 ? NetMath.gaussian(size, { mean: 0, stdDeviation: Math.sqrt(2 / (fanIn + fanOut)) }) : NetMath.lecunnormal(size, { fanIn: fanIn });\n        }\n    }, {\n        key: \"xavieruniform\",\n        value: function xavieruniform(size, _ref4) {\n            var fanIn = _ref4.fanIn,\n                fanOut = _ref4.fanOut;\n\n            return fanOut || fanOut == 0 ? NetMath.uniform(size, { limit: Math.sqrt(6 / (fanIn + fanOut)) }) : NetMath.lecununiform(size, { fanIn: fanIn });\n        }\n    }, {\n        key: \"lecunnormal\",\n        value: function lecunnormal(size, _ref5) {\n            var fanIn = _ref5.fanIn;\n\n            return NetMath.gaussian(size, { mean: 0, stdDeviation: Math.sqrt(1 / fanIn) });\n        }\n    }, {\n        key: \"lecununiform\",\n        value: function lecununiform(size, _ref6) {\n            var fanIn = _ref6.fanIn;\n\n            return NetMath.uniform(size, { limit: Math.sqrt(3 / fanIn) });\n        }\n\n        // Other\n\n    }, {\n        key: \"softmax\",\n        value: function softmax(values) {\n            var total = values.reduce(function (prev, curr) {\n                return prev + curr;\n            }, 0);\n            return values.map(function (value) {\n                return value / total;\n            });\n        }\n    }, {\n        key: \"sech\",\n        value: function sech(value) {\n            return 2 * Math.exp(-value) / (1 + Math.exp(-2 * value));\n        }\n    }, {\n        key: \"standardDeviation\",\n        value: function standardDeviation(arr) {\n            var avg = arr.reduce(function (p, c) {\n                return p + c;\n            }) / arr.length;\n            var diffs = arr.map(function (v) {\n                return v - avg;\n            }).map(function (v) {\n                return Math.pow(v, 2);\n            });\n            return Math.sqrt(diffs.reduce(function (p, c) {\n                return p + c;\n            }) / diffs.length);\n        }\n    }, {\n        key: \"maxNorm\",\n        value: function maxNorm() {\n\n            if (this.maxNormTotal > this.maxNorm) {\n\n                var multiplier = this.maxNorm / (1e-18 + this.maxNormTotal);\n\n                this.layers.forEach(function (layer, li) {\n                    li && layer.neurons.forEach(function (neuron) {\n                        neuron.weights.forEach(function (w, wi) {\n                            return neuron.weights[wi] *= multiplier;\n                        });\n                    });\n                });\n            }\n\n            this.maxNormTotal = 0;\n        }\n    }]);\n\n    return NetMath;\n}();\n\ntypeof window == \"undefined\" && (exports.NetMath = NetMath);\n\"use strict\";\n\nvar NetUtil = function () {\n    function NetUtil() {\n        _classCallCheck(this, NetUtil);\n    }\n\n    _createClass(NetUtil, null, [{\n        key: \"format\",\n        value: function format(value) {\n            var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"string\";\n\n            switch (true) {\n\n                case type == \"string\" && typeof value == \"string\":\n                    value = value.replace(/(_|\\s)/g, \"\").toLowerCase();\n                    break;\n\n                case type == \"time\" && typeof value == \"number\":\n                    var date = new Date(value);\n                    var formatted = [];\n\n                    if (value < 1000) {\n                        formatted.push(date.getMilliseconds() + \"ms\");\n                    } else {\n\n                        if (value >= 3600000) formatted.push(date.getHours() + \"h\");\n                        if (value >= 60000) formatted.push(date.getMinutes() + \"m\");\n\n                        formatted.push(date.getSeconds() + \"s\");\n                    }\n\n                    value = formatted.join(\" \");\n                    break;\n            }\n\n            return value;\n        }\n    }, {\n        key: \"shuffle\",\n        value: function shuffle(arr) {\n            for (var i = arr.length; i; i--) {\n                var j = Math.floor(Math.random() * i);\n                var x = arr[i - 1];\n                arr[i - 1] = arr[j];\n                arr[j] = x;\n            }\n        }\n    }, {\n        key: \"addZeroPadding\",\n        value: function addZeroPadding(map, zP) {\n            var extraColumns = [].concat(_toConsumableArray(new Array(zP))).map(function (v) {\n                return 0;\n            });\n            map = map.map(function (row) {\n                return [].concat(_toConsumableArray(extraColumns), _toConsumableArray(row), _toConsumableArray(extraColumns));\n            });\n\n            var extraRows = [].concat(_toConsumableArray(new Array(zP))).map(function (r) {\n                return [].concat(_toConsumableArray(new Array(map.length + zP * 2))).map(function (x) {\n                    return 0;\n                });\n            });\n            return [].concat(_toConsumableArray(extraRows.slice(0)), _toConsumableArray(map), _toConsumableArray(extraRows.slice(0)));\n        }\n    }, {\n        key: \"build2DPrefixSA\",\n        value: function build2DPrefixSA(square) {\n\n            var l = square.length;\n            var map = [].concat(_toConsumableArray(new Array(l + 1))).map(function (row) {\n                return [].concat(_toConsumableArray(new Array(l + 1))).map(function (v) {\n                    return 0;\n                });\n            });\n\n            for (var ri = 1; ri <= l; ri++) {\n                for (var vi = 1; vi <= l; vi++) {\n                    map[ri][vi] = map[ri - 1][vi] + square[ri - 1][vi - 1];\n                }\n            }\n\n            for (var _ri = 1; _ri <= l; _ri++) {\n                for (var _vi = 1; _vi <= l; _vi++) {\n                    map[_ri][_vi] += map[_ri][_vi - 1];\n                }\n            }\n\n            return map;\n        }\n    }, {\n        key: \"sum2DPSA\",\n        value: function sum2DPSA(map, zP, fS) {\n\n            var l = map.length;\n            var sumMap = [].concat(_toConsumableArray(new Array(l - 1 - zP * 2))).map(function (row) {\n                return [].concat(_toConsumableArray(new Array(l - 1 - zP * 2))).map(function (v) {\n                    return 0;\n                });\n            });\n\n            for (var ri = l - zP; ri > zP + 1; ri--) {\n                for (var v = l - zP; v > zP + 1; v--) {\n\n                    var _l = v - fS;\n                    var t = ri - fS;\n\n                    sumMap[ri - Math.floor(fS)][v - Math.floor(fS)] = map[ri][v] - map[ri][_l] - map[t][v] + map[t][_l];\n                }\n            }\n\n            return sumMap;\n        }\n    }]);\n\n    return NetUtil;\n}();\n\ntypeof window == \"undefined\" && (exports.NetUtil = NetUtil);\n\"use strict\";\n\nvar Network = function () {\n    function Network() {\n        var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            learningRate = _ref7.learningRate,\n            _ref7$layers = _ref7.layers,\n            layers = _ref7$layers === undefined ? [] : _ref7$layers,\n            _ref7$adaptiveLR = _ref7.adaptiveLR,\n            adaptiveLR = _ref7$adaptiveLR === undefined ? \"noadaptivelr\" : _ref7$adaptiveLR,\n            _ref7$activation = _ref7.activation,\n            activation = _ref7$activation === undefined ? \"sigmoid\" : _ref7$activation,\n            _ref7$cost = _ref7.cost,\n            cost = _ref7$cost === undefined ? \"meansquarederror\" : _ref7$cost,\n            rmsDecay = _ref7.rmsDecay,\n            rho = _ref7.rho,\n            lreluSlope = _ref7.lreluSlope,\n            eluAlpha = _ref7.eluAlpha,\n            _ref7$dropout = _ref7.dropout,\n            dropout = _ref7$dropout === undefined ? 1 : _ref7$dropout,\n            _ref7$l = _ref7.l2,\n            l2 = _ref7$l === undefined ? true : _ref7$l,\n            _ref7$l2 = _ref7.l1,\n            l1 = _ref7$l2 === undefined ? true : _ref7$l2,\n            maxNorm = _ref7.maxNorm,\n            weightsConfig = _ref7.weightsConfig;\n\n        _classCallCheck(this, Network);\n\n        this.state = \"not-defined\";\n        this.layers = [];\n        this.epochs = 0;\n        this.iterations = 0;\n        this.dropout = dropout == false ? 1 : dropout;\n        this.error = 0;\n        activation = NetUtil.format(activation);\n        adaptiveLR = NetUtil.format(adaptiveLR);\n        cost = NetUtil.format(cost);\n\n        if (learningRate != null) {\n            this.learningRate = learningRate;\n        }\n\n        if (l2) {\n            this.l2 = typeof l2 == \"boolean\" ? 0.001 : l2;\n            this.l2Error = 0;\n        }\n\n        if (l1) {\n            this.l1 = typeof l1 == \"boolean\" ? 0.005 : l1;\n            this.l1Error = 0;\n        }\n\n        if (maxNorm) {\n            this.maxNorm = typeof maxNorm == \"boolean\" && maxNorm ? 1000 : maxNorm;\n            this.maxNormTotal = 0;\n        }\n\n        // Activation function / Learning Rate\n        switch (adaptiveLR) {\n\n            case \"rmsprop\":\n                this.learningRate = this.learningRate == undefined ? 0.001 : this.learningRate;\n                break;\n\n            case \"adam\":\n                this.learningRate = this.learningRate == undefined ? 0.01 : this.learningRate;\n                break;\n\n            case \"adadelta\":\n                this.rho = rho == null ? 0.95 : rho;\n                break;\n\n            default:\n\n                if (this.learningRate == undefined) {\n\n                    switch (activation) {\n\n                        case \"relu\":\n                        case \"lrelu\":\n                        case \"rrelu\":\n                        case \"elu\":\n                            this.learningRate = 0.01;\n                            break;\n\n                        case \"tanh\":\n                        case \"lecuntanh\":\n                            this.learningRate = 0.001;\n                            break;\n\n                        default:\n                            this.learningRate = 0.2;\n                    }\n                }\n        }\n\n        this.adaptiveLR = [false, null, undefined].includes(adaptiveLR) ? \"noadaptivelr\" : adaptiveLR;\n        this.weightUpdateFn = NetMath[this.adaptiveLR];\n        this.activation = typeof activation == \"function\" ? activation : NetMath[activation].bind(this);\n        this.activationConfig = activation;\n        this.cost = typeof cost == \"function\" ? cost : NetMath[cost];\n\n        if (this.adaptiveLR == \"rmsprop\") {\n            this.rmsDecay = rmsDecay == undefined ? 0.99 : rmsDecay;\n        }\n\n        if (activation == \"lrelu\") {\n            this.lreluSlope = lreluSlope == undefined ? -0.0005 : lreluSlope;\n        } else if (activation == \"elu\") {\n            this.eluAlpha = eluAlpha == undefined ? 1 : eluAlpha;\n        }\n\n        // Weights distributiom\n        this.weightsConfig = { distribution: \"xavieruniform\" };\n\n        if (weightsConfig != undefined && weightsConfig.distribution) {\n            this.weightsConfig.distribution = NetUtil.format(weightsConfig.distribution);\n        }\n\n        if (this.weightsConfig.distribution == \"uniform\") {\n            this.weightsConfig.limit = weightsConfig && weightsConfig.limit != undefined ? weightsConfig.limit : 0.1;\n        } else if (this.weightsConfig.distribution == \"gaussian\") {\n            this.weightsConfig.mean = weightsConfig.mean || 0;\n            this.weightsConfig.stdDeviation = weightsConfig.stdDeviation || 0.05;\n        }\n\n        if (typeof this.weightsConfig.distribution == \"function\") {\n            this.weightsInitFn = this.weightsConfig.distribution;\n        } else {\n            this.weightsInitFn = NetMath[this.weightsConfig.distribution];\n        }\n\n        // Status\n        if (layers.length) {\n\n            switch (true) {\n\n                case layers.every(function (item) {\n                    return Number.isInteger(item);\n                }):\n                    this.layers = layers.map(function (size) {\n                        return new Layer(size);\n                    });\n                    this.state = \"constructed\";\n                    this.initLayers();\n                    break;\n\n                case layers.every(function (item) {\n                    return item instanceof Layer || item instanceof FCLayer;\n                }):\n                    this.state = \"constructed\";\n                    this.layers = layers;\n                    this.initLayers();\n                    break;\n\n                case layers.every(function (item) {\n                    return item === Layer || item === FCLayer;\n                }):\n                    this.state = \"defined\";\n                    this.definedLayers = layers;\n                    break;\n\n                default:\n                    throw new Error(\"There was an error constructing from the layers given.\");\n            }\n        }\n    }\n\n    _createClass(Network, [{\n        key: \"initLayers\",\n        value: function initLayers(input, expected) {\n            var _this5 = this;\n\n            switch (this.state) {\n\n                case \"initialised\":\n                    return;\n\n                case \"defined\":\n                    this.layers = this.definedLayers.map(function (layer, li) {\n\n                        if (!li) return new layer(input);\n\n                        if (li == _this5.definedLayers.length - 1) return new layer(expected);\n\n                        var hidden = _this5.definedLayers.length - 2;\n                        var size = input / expected > 5 ? expected + (expected + Math.abs(input - expected) / 4) * (hidden - li + 1) / (hidden / 2) : input >= expected ? input + expected * (hidden - li) / (hidden / 2) : expected + input * (hidden - li) / (hidden / 2);\n\n                        return new layer(Math.max(Math.round(size), 0));\n                    });\n                    break;\n\n                case \"not-defined\":\n                    this.layers[0] = new FCLayer(input);\n                    this.layers[1] = new FCLayer(Math.ceil(input / expected > 5 ? expected + Math.abs(input - expected) / 4 : input + expected));\n                    this.layers[2] = new FCLayer(Math.ceil(expected));\n                    break;\n            }\n\n            this.layers.forEach(this.joinLayer.bind(this));\n            this.state = \"initialised\";\n        }\n    }, {\n        key: \"joinLayer\",\n        value: function joinLayer(layer, layerIndex) {\n\n            layer.net = this;\n            layer.activation = this.activation;\n\n            layer.weightsConfig = {};\n            Object.assign(layer.weightsConfig, this.weightsConfig);\n\n            if (layerIndex) {\n                layer.weightsConfig.fanIn = this.layers[layerIndex - 1].size;\n                this.layers[layerIndex - 1].weightsConfig.fanOut = layer.size;\n                this.layers[layerIndex - 1].assignNext(layer);\n                layer.assignPrev(this.layers[layerIndex - 1]);\n            }\n        }\n    }, {\n        key: \"forward\",\n        value: function forward(data) {\n\n            if (this.state != \"initialised\") {\n                throw new Error(\"The network layers have not been initialised.\");\n            }\n\n            if (data === undefined) {\n                throw new Error(\"No data passed to Network.forward()\");\n            }\n\n            if (data.length != this.layers[0].neurons.length) {\n                console.warn(\"Input data length did not match input layer neurons count.\");\n            }\n\n            this.layers[0].neurons.forEach(function (neuron, ni) {\n                return neuron.activation = data[ni];\n            });\n            this.layers.forEach(function (layer, li) {\n                return li && layer.forward(data);\n            });\n            return this.layers[this.layers.length - 1].neurons.map(function (n) {\n                return n.activation;\n            });\n        }\n    }, {\n        key: \"backward\",\n        value: function backward(expected) {\n\n            if (expected === undefined) {\n                throw new Error(\"No data passed to Network.backward()\");\n            }\n\n            if (expected.length != this.layers[this.layers.length - 1].neurons.length) {\n                console.warn(\"Expected data length did not match output layer neurons count.\");\n            }\n\n            this.layers[this.layers.length - 1].backward(expected);\n\n            for (var layerIndex = this.layers.length - 2; layerIndex > 0; layerIndex--) {\n                this.layers[layerIndex].backward();\n            }\n        }\n    }, {\n        key: \"train\",\n        value: function train(dataSet) {\n            var _this6 = this;\n\n            var _ref8 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n                _ref8$epochs = _ref8.epochs,\n                epochs = _ref8$epochs === undefined ? 1 : _ref8$epochs,\n                callback = _ref8.callback,\n                _ref8$log = _ref8.log,\n                log = _ref8$log === undefined ? true : _ref8$log,\n                _ref8$miniBatchSize = _ref8.miniBatchSize,\n                miniBatchSize = _ref8$miniBatchSize === undefined ? 1 : _ref8$miniBatchSize,\n                _ref8$shuffle = _ref8.shuffle,\n                shuffle = _ref8$shuffle === undefined ? false : _ref8$shuffle;\n\n            this.miniBatchSize = typeof miniBatchSize == \"boolean\" && miniBatchSize ? dataSet[0].expected.length : miniBatchSize;\n\n            if (shuffle) {\n                NetUtil.shuffle(dataSet);\n            }\n\n            if (log) {\n                console.log(\"Training started. Epochs: \" + epochs + \" Batch Size: \" + this.miniBatchSize);\n            }\n\n            return new Promise(function (resolve, reject) {\n\n                if (dataSet === undefined || dataSet === null) {\n                    return void reject(\"No data provided\");\n                }\n\n                if (_this6.state != \"initialised\") {\n                    _this6.initLayers(dataSet[0].input.length, (dataSet[0].expected || dataSet[0].output).length);\n                }\n\n                _this6.layers.forEach(function (layer) {\n                    return layer.state = \"training\";\n                });\n\n                var iterationIndex = 0;\n                var epochsCounter = 0;\n                var startTime = Date.now();\n\n                var doEpoch = function doEpoch() {\n                    _this6.epochs++;\n                    _this6.error = 0;\n                    iterationIndex = 0;\n\n                    if (_this6.l2Error != undefined) _this6.l2Error = 0;\n                    if (_this6.l1Error != undefined) _this6.l1Error = 0;\n\n                    doIteration();\n                };\n\n                var doIteration = function doIteration() {\n\n                    if (!dataSet[iterationIndex].hasOwnProperty(\"input\") || !dataSet[iterationIndex].hasOwnProperty(\"expected\") && !dataSet[iterationIndex].hasOwnProperty(\"output\")) {\n                        return void reject(\"Data set must be a list of objects with keys: 'input' and 'expected' (or 'output')\");\n                    }\n\n                    var input = dataSet[iterationIndex].input;\n                    var output = _this6.forward(input);\n                    var target = dataSet[iterationIndex].expected || dataSet[iterationIndex].output;\n\n                    _this6.backward(target);\n\n                    if (++iterationIndex % _this6.miniBatchSize == 0) {\n                        _this6.applyDeltaWeights();\n                        _this6.resetDeltaWeights();\n                    } else if (iterationIndex >= dataSet.length) {\n                        _this6.applyDeltaWeights();\n                    }\n\n                    var iterationError = _this6.cost(target, output);\n                    var elapsed = Date.now() - startTime;\n                    _this6.error += iterationError;\n\n                    if (typeof callback == \"function\") {\n                        callback({\n                            iterations: _this6.iterations,\n                            error: iterationError,\n                            elapsed: elapsed, input: input\n                        });\n                    }\n\n                    _this6.iterations++;\n\n                    if (iterationIndex < dataSet.length) {\n                        setTimeout(doIteration.bind(_this6), 0);\n                    } else {\n                        epochsCounter++;\n\n                        if (log) {\n                            console.log(\"Epoch: \" + _this6.epochs + \" Error: \" + _this6.error / iterationIndex + (_this6.l2 == undefined ? \"\" : \" L2 Error: \" + _this6.l2Error / iterationIndex), \"\\nElapsed: \" + NetUtil.format(elapsed, \"time\") + \" Average Duration: \" + NetUtil.format(elapsed / epochsCounter, \"time\"));\n                        }\n\n                        if (epochsCounter < epochs) {\n                            doEpoch();\n                        } else {\n                            _this6.layers.forEach(function (layer) {\n                                return layer.state = \"initialised\";\n                            });\n\n                            if (log) {\n                                console.log(\"Training finished. Total time: \" + NetUtil.format(elapsed, \"time\") + \"  Average iteration time: \" + NetUtil.format(elapsed / iterationIndex, \"time\"));\n                            }\n                            resolve();\n                        }\n                    }\n                };\n\n                _this6.resetDeltaWeights();\n                doEpoch();\n            });\n        }\n    }, {\n        key: \"test\",\n        value: function test(testSet) {\n            var _this7 = this;\n\n            var _ref9 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n                _ref9$log = _ref9.log,\n                log = _ref9$log === undefined ? true : _ref9$log,\n                callback = _ref9.callback;\n\n            return new Promise(function (resolve, reject) {\n\n                if (testSet === undefined || testSet === null) {\n                    reject(\"No data provided\");\n                }\n\n                var totalError = 0;\n                var iterationIndex = 0;\n                var startTime = Date.now();\n\n                var testInput = function testInput() {\n\n                    var input = testSet[iterationIndex].input;\n                    var output = _this7.forward(input);\n                    var target = testSet[iterationIndex].expected || testSet[iterationIndex].output;\n                    var elapsed = Date.now() - startTime;\n\n                    var iterationError = _this7.cost(target, output);\n                    totalError += iterationError;\n                    iterationIndex++;\n\n                    if (log) {\n                        console.log(\"Testing iteration\", iterationIndex, iterationError);\n                    }\n\n                    if (typeof callback == \"function\") {\n                        callback({\n                            iterations: iterationIndex,\n                            error: iterationError,\n                            elapsed: elapsed, input: input\n                        });\n                    }\n\n                    if (iterationIndex < testSet.length) {\n                        setTimeout(testInput.bind(_this7), 0);\n                    } else {\n\n                        if (log) {\n                            console.log(\"Testing finished. Total time: \" + NetUtil.format(elapsed, \"time\") + \"  Average iteration time: \" + NetUtil.format(elapsed / iterationIndex, \"time\"));\n                        }\n\n                        resolve(totalError / testSet.length);\n                    }\n                };\n                testInput();\n            });\n        }\n    }, {\n        key: \"resetDeltaWeights\",\n        value: function resetDeltaWeights() {\n            this.layers.forEach(function (layer, li) {\n                li && layer.neurons.forEach(function (neuron) {\n                    return neuron.deltaWeights = neuron.weights.map(function (dw) {\n                        return 0;\n                    });\n                });\n            });\n        }\n    }, {\n        key: \"applyDeltaWeights\",\n        value: function applyDeltaWeights() {\n            var _this8 = this;\n\n            this.layers.forEach(function (layer, li) {\n                li && layer.neurons.forEach(function (neuron) {\n                    neuron.deltaWeights.forEach(function (dw, dwi) {\n\n                        if (_this8.l2 != undefined) _this8.l2Error += 0.5 * _this8.l2 * Math.pow(neuron.weights[dwi], 2);\n                        if (_this8.l1 != undefined) _this8.l1Error += _this8.l1 * Math.abs(neuron.weights[dwi]);\n\n                        neuron.weights[dwi] = _this8.weightUpdateFn.bind(_this8, neuron.weights[dwi], dw, neuron, dwi)();\n\n                        if (_this8.maxNorm != undefined) _this8.maxNormTotal += Math.pow(neuron.weights[dwi], 2);\n                    });\n\n                    neuron.bias = _this8.weightUpdateFn.bind(_this8, neuron.bias, neuron.deltaBias, neuron)();\n                });\n            });\n\n            if (this.maxNorm != undefined) {\n                this.maxNormTotal = Math.sqrt(this.maxNormTotal);\n                NetMath.maxNorm.bind(this)();\n            }\n        }\n    }, {\n        key: \"toJSON\",\n        value: function toJSON() {\n            return {\n                layers: this.layers.map(function (layer) {\n                    return {\n                        neurons: layer.neurons.map(function (neuron) {\n                            return {\n                                bias: neuron.bias,\n                                weights: neuron.weights\n                            };\n                        })\n                    };\n                })\n            };\n        }\n    }, {\n        key: \"fromJSON\",\n        value: function fromJSON(data) {\n\n            if (data === undefined || data === null) {\n                throw new Error(\"No JSON data given to import.\");\n            }\n\n            this.layers = data.layers.map(function (layer) {\n                return new FCLayer(layer.neurons.length, layer.neurons);\n            });\n            this.state = \"constructed\";\n            this.initLayers();\n        }\n    }]);\n\n    return Network;\n}();\n\ntypeof window == \"undefined\" && (exports.Network = Network);\n\"use strict\";\n\nvar Neuron = function () {\n    function Neuron(importedData) {\n        _classCallCheck(this, Neuron);\n\n        if (importedData) {\n            this.imported = true;\n            this.weights = importedData.weights || [];\n            this.bias = importedData.bias;\n        }\n    }\n\n    _createClass(Neuron, [{\n        key: \"init\",\n        value: function init(size) {\n            var _ref10 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n                adaptiveLR = _ref10.adaptiveLR,\n                activationConfig = _ref10.activationConfig,\n                eluAlpha = _ref10.eluAlpha;\n\n            this.deltaWeights = this.weights.map(function (v) {\n                return 0;\n            });\n\n            switch (adaptiveLR) {\n\n                case \"gain\":\n                    this.weightGains = [].concat(_toConsumableArray(new Array(size))).map(function (v) {\n                        return 1;\n                    });\n                    this.biasGain = 1;\n                    break;\n\n                case \"adagrad\":\n                case \"rmsprop\":\n                case \"adadelta\":\n                    this.biasCache = 0;\n                    this.weightsCache = [].concat(_toConsumableArray(new Array(size))).map(function (v) {\n                        return 0;\n                    });\n\n                    if (adaptiveLR == \"adadelta\") {\n                        this.adadeltaCache = [].concat(_toConsumableArray(new Array(size))).map(function (v) {\n                            return 0;\n                        });\n                        this.adadeltaBiasCache = 0;\n                    }\n                    break;\n\n                case \"adam\":\n                    this.m = 0;\n                    this.v = 0;\n                    break;\n            }\n\n            if (activationConfig == \"rrelu\") {\n                this.rreluSlope = Math.random() * 0.001;\n            } else if (activationConfig == \"elu\") {\n                this.eluAlpha = eluAlpha;\n            }\n        }\n    }]);\n\n    return Neuron;\n}();\n\ntypeof window == \"undefined\" && (exports.Neuron = Neuron);\n//# sourceMappingURL=Network.concat.js.map\n//# sourceMappingURL=Network.min.js.map\n"]}