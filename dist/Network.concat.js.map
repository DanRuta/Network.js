{"version":3,"sources":["../dev/Layer.js","../dev/NetMath.js","../dev/Network.js","../dev/Neuron.js"],"names":[],"mappings":"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","file":"Network.concat.js","sourcesContent":["\"use strict\"\r\n\r\nclass Layer {\r\n    \r\n    constructor (size, importedData) {\r\n        this.size = size\r\n        this.neurons = [...new Array(size)].map((n, ni) => new Neuron(importedData ? importedData[ni] : undefined))\r\n        this.state = \"not-initialised\"\r\n    }\r\n\r\n    assignNext (layer) {\r\n        this.nextLayer = layer\r\n    }\r\n\r\n    assignPrev (layer) {\r\n\r\n        this.prevLayer = layer\r\n        this.neurons.forEach(neuron => {\r\n\r\n            if(!neuron.imported) {\r\n                neuron.weights = this.weightsInitFn(layer.size, this.weightsConfig)\r\n                neuron.bias = Math.random()*0.2-0.1\r\n            }\r\n\r\n            neuron.init(layer.size, {\r\n                adaptiveLR: this.adaptiveLR,\r\n                activationConfig: this.activationConfig,\r\n                eluAlpha: this.eluAlpha\r\n            })\r\n        }) \r\n        this.state = \"initialised\"\r\n    }\r\n\r\n    forward (data) {\r\n\r\n        this.neurons.forEach((neuron, ni) => {\r\n\r\n            if(this.state==\"training\" && (neuron.dropped = Math.random() > this.dropout)) {\r\n                neuron.activation = 0\r\n            }else {\r\n                neuron.sum = neuron.bias\r\n                this.prevLayer.neurons.forEach((pNeuron, pni) => neuron.sum += pNeuron.activation * neuron.weights[pni])\r\n                neuron.activation = this.activation(neuron.sum, false, neuron) / (this.dropout|1)\r\n            }\r\n        })\r\n    }\r\n\r\n    backward (expected) {\r\n        this.neurons.forEach((neuron, ni) => {\r\n\r\n            if(neuron.dropped) {\r\n                neuron.error = 0\r\n                neuron.deltaBias = 0\r\n            }else {\r\n                if(typeof expected !== \"undefined\") {\r\n                    neuron.error = expected[ni] - neuron.activation\r\n                }else {\r\n                    neuron.derivative = this.activation(neuron.sum, true, neuron)\r\n                    neuron.error = neuron.derivative * this.nextLayer.neurons.map(n => n.error * (n.weights[ni]|0))\r\n                                                                             .reduce((p,c) => p+c, 0)\r\n                }\r\n\r\n                neuron.weights.forEach((weight, wi) => {\r\n                    neuron.deltaWeights[wi] += (neuron.error * this.prevLayer.neurons[wi].activation) * \r\n                                               (1 + ((this.l2||0)+(this.l1||0)) * neuron.deltaWeights[wi])\r\n                })\r\n\r\n                neuron.deltaBias = neuron.error\r\n            }            \r\n        })\r\n    }\r\n}\r\n\r\ntypeof window==\"undefined\" && (global.Layer = Layer) ","\"use strict\"\r\n\r\nclass NetMath {\r\n    \r\n    // Activation functions\r\n    static sigmoid (value, prime) {\r\n        const val = 1/(1+Math.exp(-value))\r\n        return prime ? val*(1-val)\r\n                     : val\r\n    }\r\n\r\n    static tanh (value, prime) {\r\n        const exp = Math.exp(2*value)\r\n        return prime ? 4/Math.pow(Math.exp(value)+Math.exp(-value), 2) || 1e-18\r\n                     : (exp-1)/(exp+1) || 1e-18\r\n    }\r\n\r\n    static relu (value, prime) {\r\n        return prime ? value > 0 ? 1 : 0\r\n                     : Math.max(value, 0)\r\n    }\r\n\r\n    static lrelu (value, prime) {\r\n        return prime ? value > 0 ? 1 : this.lreluSlope\r\n                     : Math.max(this.lreluSlope*Math.abs(value), value)\r\n    }\r\n\r\n    static rrelu (value, prime, neuron) {\r\n        return prime ? value > 0 ? 1 : neuron.rreluSlope\r\n                     : Math.max(neuron.rreluSlope, value)   \r\n    }\r\n\r\n    static lecuntanh (value, prime) {\r\n        return prime ? 1.15333 * Math.pow(NetMath.sech((2/3) * value), 2)\r\n                     : 1.7159 * NetMath.tanh((2/3) * value)\r\n    }\r\n\r\n    static elu (value, prime, neuron) {\r\n        return prime ? value >=0 ? 1 : NetMath.elu(value, false, neuron) + neuron.eluAlpha\r\n                     : value >=0 ? value : neuron.eluAlpha * (Math.exp(value) - 1)\r\n    }\r\n    \r\n    // Cost functions\r\n    static crossentropy (target, output) {\r\n        return output.map((value, vi) => target[vi] * Math.log(value+1e-15) + ((1-target[vi]) * Math.log((1+1e-15)-value)))\r\n                     .reduce((p,c) => p-c, 0)\r\n    }\r\n\r\n    static meansquarederror (calculated, desired) {\r\n        return calculated.map((output, index) => Math.pow(output - desired[index], 2))\r\n                         .reduce((prev, curr) => prev+curr, 0) / calculated.length\r\n    }\r\n\r\n    // Weight updating functions\r\n    static noadaptivelr (value, deltaValue) {\r\n        return value + this.learningRate * deltaValue\r\n    }\r\n\r\n    static gain (value, deltaValue, neuron, weightI) {\r\n\r\n        const newVal = value + this.learningRate * deltaValue * (weightI==null ? neuron.biasGain : neuron.weightGains[weightI])\r\n\r\n        if(newVal<=0 && value>0 || newVal>=0 && value<0){\r\n            if(weightI!=null)\r\n                 neuron.weightGains[weightI] = Math.max(neuron.weightGains[weightI]*0.95, 0.5)\r\n            else neuron.biasGain = Math.max(neuron.biasGain*0.95, 0.5)\r\n        }else {\r\n            if(weightI!=null)\r\n                 neuron.weightGains[weightI] = Math.min(neuron.weightGains[weightI]+0.05, 5)\r\n            else neuron.biasGain = Math.min(neuron.biasGain+0.05, 5)\r\n        }\r\n\r\n        return newVal\r\n    }\r\n\r\n    static adagrad (value, deltaValue, neuron, weightI) {\r\n\r\n        if(weightI!=null)\r\n             neuron.weightsCache[weightI] += Math.pow(deltaValue, 2)\r\n        else neuron.biasCache += Math.pow(deltaValue, 2)\r\n\r\n        return value + this.learningRate * deltaValue / (1e-6 + Math.sqrt(weightI!=null ? neuron.weightsCache[weightI]\r\n                                                                                        : neuron.biasCache))\r\n    }\r\n\r\n    static rmsprop (value, deltaValue, neuron, weightI) {\r\n\r\n        if(weightI!=null)\r\n             neuron.weightsCache[weightI] = this.rmsDecay * neuron.weightsCache[weightI] + (1 - this.rmsDecay) * Math.pow(deltaValue, 2)\r\n        else neuron.biasCache = this.rmsDecay * neuron.biasCache + (1 - this.rmsDecay) * Math.pow(deltaValue, 2)\r\n\r\n        return value + this.learningRate * deltaValue / (1e-6 + Math.sqrt(weightI!=null ? neuron.weightsCache[weightI]\r\n                                                                                        : neuron.biasCache))\r\n    }\r\n\r\n    static adam (value, deltaValue, neuron) {\r\n\r\n        neuron.m = 0.9*neuron.m + (1-0.9) * deltaValue\r\n        const mt = neuron.m / (1-Math.pow(0.9, this.iterations + 1))\r\n\r\n        neuron.v = 0.999*neuron.v + (1-0.999)*(Math.pow(deltaValue, 2))\r\n        const vt = neuron.v / (1-Math.pow(0.999, this.iterations + 1))\r\n\r\n        return value + this.learningRate * mt / (Math.sqrt(vt) + 1e-8)\r\n    }\r\n\r\n    static adadelta (value, deltaValue, neuron, weightI) {\r\n\r\n        if(weightI!=null) {\r\n            neuron.weightsCache[weightI] = this.rho * neuron.weightsCache[weightI] + (1-this.rho) * Math.pow(deltaValue, 2)\r\n            const newVal = value + Math.sqrt((neuron.adadeltaCache[weightI] + 1e-6)/(neuron.weightsCache[weightI] + 1e-6)) * deltaValue\r\n            neuron.adadeltaCache[weightI] = this.rho * neuron.adadeltaCache[weightI] + (1-this.rho) * Math.pow(deltaValue, 2)\r\n            return newVal\r\n\r\n        }else {\r\n            neuron.biasCache = this.rho * neuron.biasCache + (1-this.rho) * Math.pow(deltaValue, 2)\r\n            const newVal = value + Math.sqrt((neuron.adadeltaBiasCache + 1e-6)/(neuron.biasCache + 1e-6)) * deltaValue\r\n            neuron.adadeltaBiasCache = this.rho * neuron.adadeltaBiasCache + (1-this.rho) * Math.pow(deltaValue, 2)\r\n            return newVal\r\n        }\r\n    }\r\n\r\n    // Weights init\r\n    static uniform (size, {limit}) {\r\n        return [...new Array(size)].map(v => Math.random()*2*limit-limit)\r\n    }\r\n\r\n    static gaussian (size, {mean, stdDeviation}) {\r\n        return [...new Array(size)].map(() => {\r\n            // Polar Box Muller\r\n            let x1, x2, r, y\r\n\r\n            do {\r\n                x1 = 2 * Math.random() -1\r\n                x2 = 2 * Math.random() -1\r\n                r = x1**2 + x2**2\r\n            } while (r >= 1 || !r)\r\n\r\n            return mean + (x1 * (Math.sqrt(-2 * Math.log(r) / r))) * stdDeviation\r\n        })\r\n    }\r\n\r\n    static xaviernormal (size, {fanIn, fanOut}) {\r\n        return fanOut || fanOut==0 ? NetMath.gaussian(size, {mean: 0, stdDeviation: Math.sqrt(2/(fanIn+fanOut))})\r\n                                   : NetMath.lecunnormal(size, {fanIn})\r\n    }\r\n\r\n    static xavieruniform (size, {fanIn, fanOut}) {\r\n        return fanOut || fanOut==0 ? NetMath.uniform(size, {limit: Math.sqrt(6/(fanIn+fanOut))})\r\n                                   : NetMath.lecununiform(size, {fanIn})\r\n    }    \r\n\r\n    static lecunnormal (size, {fanIn}) {\r\n        return NetMath.gaussian(size, {mean: 0, stdDeviation: Math.sqrt(1/fanIn)})\r\n    }\r\n\r\n    static lecununiform (size, {fanIn}) {\r\n        return NetMath.uniform(size, {limit: Math.sqrt(3/fanIn)})\r\n    }\r\n\r\n    // Other\r\n    static softmax (values) {\r\n        const total = values.reduce((prev, curr) => prev+curr, 0)\r\n        return values.map(value => value/total)\r\n    }\r\n\r\n    static sech (value) {\r\n        return (2*Math.exp(-value))/(1+Math.exp(-2*value))\r\n    }\r\n\r\n    static standardDeviation (arr) {\r\n        const avg = arr.reduce((p,c) => p+c) / arr.length\r\n        const diffs = arr.map(v => v - avg).map(v => v**2)\r\n        return Math.sqrt(diffs.reduce((p,c) => p+c) / diffs.length)\r\n    }\r\n\r\n    static maxNorm () {\r\n\r\n        if(this.maxNormTotal > this.maxNorm) {\r\n\r\n            const multiplier = this.maxNorm / (1e-18 + this.maxNormTotal)\r\n\r\n            this.layers.forEach((layer, li) => {\r\n                li && layer.neurons.forEach(neuron => {\r\n                    neuron.weights.forEach((w, wi) => {\r\n                        neuron.weights[wi] *= multiplier\r\n                    })\r\n                })\r\n            })\r\n        }\r\n\r\n        this.maxNormTotal = 0\r\n    }\r\n}\r\n\r\ntypeof window==\"undefined\" && (global.NetMath = NetMath)","\"use strict\"\r\n\r\nclass Network {\r\n\r\n    constructor ({learningRate, layers=[], adaptiveLR=\"noadaptivelr\", activation=\"sigmoid\", cost=\"crossentropy\", \r\n        rmsDecay, rho, lreluSlope, eluAlpha, dropout=0.5, l2, l1, maxNorm, weightsConfig}={}) {\r\n        this.state = \"not-defined\"\r\n        this.layers = []\r\n        this.epochs = 0\r\n        this.iterations = 0\r\n        this.dropout = dropout==false ? 1 : dropout\r\n        this.error = 0\r\n        activation = this.format(activation)\r\n        adaptiveLR = this.format(adaptiveLR)\r\n        cost = this.format(cost)\r\n\r\n        if(learningRate!=null){    \r\n            this.learningRate = learningRate\r\n        }\r\n\r\n        if(l2){\r\n            this.l2 = typeof l2==\"boolean\" && l2 ? 0.001 : l2\r\n            this.l2Error = 0\r\n        }\r\n\r\n        if(l1){\r\n            this.l1 = typeof l1==\"boolean\" && l1 ? 0.005 : l1\r\n            this.l1Error = 0\r\n        }\r\n\r\n        if(maxNorm){\r\n            this.maxNorm = typeof maxNorm==\"boolean\" && maxNorm ? 1000 : maxNorm\r\n            this.maxNormTotal = 0\r\n        }\r\n\r\n        // Activation function / Learning Rate\r\n        switch(true) {\r\n\r\n            case adaptiveLR==\"rmsprop\":\r\n                this.learningRate = this.learningRate==undefined ? 0.001 : this.learningRate\r\n                break\r\n\r\n            case adaptiveLR==\"adam\":\r\n                this.learningRate = this.learningRate==undefined ? 0.01 : this.learningRate\r\n                break\r\n\r\n            case adaptiveLR==\"adadelta\":\r\n                this.rho = rho==null ? 0.95 : rho\r\n                break\r\n\r\n            default:\r\n\r\n                if(this.learningRate==undefined){\r\n                    switch(activation) {\r\n                        case \"relu\":\r\n                        case \"lrelu\":\r\n                        case \"rrelu\":\r\n                        case \"elu\":\r\n                            this.learningRate = 0.01\r\n                            break\r\n                        case \"tanh\":\r\n                        case \"lecuntanh\":\r\n                            this.learningRate = 0.001\r\n                            break\r\n                        default:\r\n                            this.learningRate = 0.2\r\n                    }\r\n                }\r\n        }\r\n        \r\n        this.adaptiveLR = [false, null, undefined].includes(adaptiveLR) ? \"noadaptivelr\" : adaptiveLR\r\n        this.weightUpdateFn = NetMath[this.adaptiveLR]\r\n        this.activation = typeof activation==\"function\" ? activation : NetMath[activation].bind(this)\r\n        this.activationConfig = activation\r\n        this.cost = typeof cost==\"function\" ? cost : NetMath[cost]\r\n\r\n        if(this.adaptiveLR==\"rmsprop\"){\r\n            this.rmsDecay = rmsDecay==undefined ? 0.99 : rmsDecay\r\n        }\r\n\r\n        if(activation==\"lrelu\"){\r\n            this.lreluSlope = lreluSlope==undefined ? -0.0005 : lreluSlope\r\n        }else if(activation==\"elu\") {\r\n            this.eluAlpha = eluAlpha==undefined ? 1 : eluAlpha\r\n        }\r\n\r\n        // Weights distributiom\r\n        this.weightsConfig = {distribution: \"uniform\"}\r\n\r\n        if(weightsConfig != undefined) {\r\n            if(weightsConfig.distribution) {\r\n                this.weightsConfig.distribution = this.format(weightsConfig.distribution) \r\n            }\r\n        }\r\n\r\n        if(this.weightsConfig.distribution == \"uniform\") {\r\n            this.weightsConfig.limit = weightsConfig && weightsConfig.limit!=undefined ? weightsConfig.limit : 0.1\r\n\r\n        } else if(this.weightsConfig.distribution == \"gaussian\") {\r\n\r\n            this.weightsConfig.mean = weightsConfig.mean || 0\r\n            this.weightsConfig.stdDeviation = weightsConfig.stdDeviation || 0.05        \r\n        }\r\n\r\n        // Status\r\n        if(layers.length) {\r\n\r\n            switch(true) {\r\n\r\n                case layers.every(item => Number.isInteger(item)):\r\n                    this.layers = layers.map(size => new Layer(size))\r\n                    this.state = \"constructed\"\r\n                    this.initLayers()\r\n                    break\r\n\r\n                case layers.every(item => item instanceof Layer):\r\n                    this.state = \"constructed\"\r\n                    this.layers = layers\r\n                    this.initLayers()\r\n                    break\r\n\r\n                case layers.every(item => item === Layer):\r\n                    this.state = \"defined\"\r\n                    this.definedLayers = layers\r\n                    break\r\n\r\n                default:\r\n                    throw new Error(\"There was an error constructing from the layers given.\")\r\n            }\r\n        }\r\n    }\r\n\r\n    initLayers (input, expected) {\r\n\r\n        switch(this.state){\r\n\r\n            case \"initialised\":\r\n                return\r\n\r\n            case \"defined\":\r\n                this.layers = this.definedLayers.map((layer, li) => {\r\n                    \r\n                    if(!li)\r\n                        return new layer(input)\r\n\r\n                    if(li==this.definedLayers.length-1) \r\n                        return new layer(expected)\r\n\r\n                    const hidden = this.definedLayers.length-2\r\n                    const size = input/expected > 5 ? expected + (expected + (Math.abs(input-expected))/4) * (hidden-li+1)/(hidden/2)\r\n                                                    : input >= expected ? input + expected * (hidden-li)/(hidden/2)\r\n                                                                        : expected + input * (hidden-li)/(hidden/2)\r\n\r\n                    return new layer(Math.max(Math.round(size), 0))\r\n                })\r\n                break\r\n\r\n            case \"not-defined\":\r\n                this.layers[0] = new Layer(input)\r\n                this.layers[1] = new Layer(Math.ceil(input/expected > 5 ? expected + (Math.abs(input-expected))/4\r\n                                                                        : input + expected))\r\n                this.layers[2] = new Layer(Math.ceil(expected))\r\n                break\r\n        }\r\n\r\n        this.layers.forEach(this.joinLayer.bind(this))\r\n        this.state = \"initialised\"\r\n    }\r\n\r\n    joinLayer (layer, layerIndex) {\r\n\r\n        layer.activation = this.activation\r\n        layer.adaptiveLR = this.adaptiveLR\r\n        layer.activationConfig = this.activationConfig\r\n        layer.dropout = this.dropout\r\n\r\n        layer.weightsConfig = {}\r\n        Object.assign(layer.weightsConfig, this.weightsConfig)\r\n        layer.weightsInitFn = NetMath[layer.weightsConfig.distribution]\r\n\r\n        if(this.rho!=undefined) {\r\n            layer.rho = this.rho\r\n        }\r\n        \r\n        if(this.eluAlpha!=undefined) {\r\n            layer.eluAlpha = this.eluAlpha\r\n        }\r\n\r\n        if(this.l2!=undefined) {\r\n            layer.l2 = this.l2\r\n        }\r\n\r\n        if(this.l1!=undefined) {\r\n            layer.l1 = this.l1\r\n        }\r\n\r\n        if(layerIndex) {\r\n            layer.weightsConfig.fanIn = this.layers[layerIndex-1].size\r\n            this.layers[layerIndex-1].weightsConfig.fanOut = layer.size\r\n            this.layers[layerIndex-1].assignNext(layer)\r\n            layer.assignPrev(this.layers[layerIndex-1])\r\n        }\r\n    }\r\n\r\n    forward (data) {\r\n\r\n        if(this.state!=\"initialised\"){\r\n            throw new Error(\"The network layers have not been initialised.\")\r\n        }\r\n\r\n        if(data === undefined){\r\n            throw new Error(\"No data passed to Network.forward()\")\r\n        }\r\n\r\n        if(data.length != this.layers[0].neurons.length){\r\n            console.warn(\"Input data length did not match input layer neurons count.\")\r\n        }\r\n\r\n        this.layers[0].neurons.forEach((neuron, ni) => neuron.activation = data[ni])\r\n        this.layers.forEach((layer, li) => li && layer.forward(data))\r\n        return this.layers[this.layers.length-1].neurons.map(n => n.activation)\r\n    }\r\n\r\n    backward (expected) {\r\n        if(expected === undefined){\r\n            throw new Error(\"No data passed to Network.backward()\")\r\n        }\r\n\r\n        if(expected.length != this.layers[this.layers.length-1].neurons.length){\r\n            console.warn(\"Expected data length did not match output layer neurons count.\")\r\n        }\r\n\r\n        this.layers[this.layers.length-1].backward(expected)\r\n\r\n        for(let layerIndex=this.layers.length-2; layerIndex>0; layerIndex--){\r\n            this.layers[layerIndex].backward()\r\n        }\r\n    }\r\n\r\n    train (dataSet, {epochs=1, callback}={}) {\r\n        return new Promise((resolve, reject) => {\r\n            \r\n            if(dataSet === undefined || dataSet === null) {\r\n                reject(\"No data provided\")\r\n            }\r\n\r\n            if(this.state != \"initialised\"){\r\n                this.initLayers(dataSet[0].input.length, (dataSet[0].expected || dataSet[0].output).length)\r\n            }\r\n\r\n            this.layers.forEach(layer => layer.state = \"training\")\r\n\r\n            let iterationIndex = 0\r\n            let epochsCounter = 0\r\n\r\n            const doEpoch = () => {\r\n                this.epochs++\r\n                this.error = 0\r\n                iterationIndex = 0\r\n\r\n                if(this.l2Error!=undefined){\r\n                    this.l2Error = 0\r\n                }\r\n\r\n                if(this.l1Error!=undefined){\r\n                    this.l1Error = 0\r\n                }\r\n\r\n                doIteration()               \r\n            }\r\n\r\n            const doIteration = () => {\r\n                \r\n                if(!dataSet[iterationIndex].hasOwnProperty(\"input\") || (!dataSet[iterationIndex].hasOwnProperty(\"expected\") && !dataSet[iterationIndex].hasOwnProperty(\"output\"))){\r\n                    return reject(\"Data set must be a list of objects with keys: 'input' and 'expected' (or 'output')\")\r\n                }\r\n\r\n                this.resetDeltaWeights()\r\n\r\n                const input = dataSet[iterationIndex].input\r\n                const output = this.forward(input)\r\n                const target = dataSet[iterationIndex].expected || dataSet[iterationIndex].output\r\n\r\n                this.backward(target)\r\n                this.applyDeltaWeights()\r\n\r\n                const iterationError = this.cost(target, output)\r\n                this.error += iterationError\r\n\r\n                if(typeof callback==\"function\") {\r\n                    callback({\r\n                        iterations: this.iterations,\r\n                        error: iterationError,\r\n                        input\r\n                    })\r\n                }\r\n\r\n                this.iterations++\r\n                iterationIndex++\r\n\r\n                if(iterationIndex < dataSet.length){\r\n                    setTimeout(doIteration.bind(this), 0)\r\n                }else {\r\n\r\n                    epochsCounter++\r\n                    console.log(`Epoch: ${this.epochs} Error: ${this.error/iterationIndex}${this.l2==undefined ? \"\": ` L2 Error: ${this.l2Error/iterationIndex}`}`)\r\n\r\n                    if(epochsCounter < epochs){\r\n                        doEpoch()\r\n                    }else {\r\n                        this.layers.forEach(layer => layer.state = \"initialised\")\r\n                        resolve()\r\n                    }\r\n                }\r\n            }\r\n\r\n            doEpoch()\r\n        })\r\n    }\r\n\r\n    test (testSet) {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            if(testSet === undefined || testSet === null) {\r\n                reject(\"No data provided\")\r\n            }\r\n\r\n            let totalError = 0\r\n            let testIteration = 0\r\n\r\n            const testInput = () => {\r\n\r\n                const output = this.forward(testSet[testIteration].input)\r\n                const target = testSet[testIteration].expected || testSet[testIteration].output\r\n\r\n                totalError += this.cost(target, output)\r\n\r\n                console.log(\"Testing iteration\", testIteration+1, totalError/(testIteration+1))\r\n\r\n                testIteration++\r\n\r\n                if(testIteration < testSet.length)\r\n                    setTimeout(testInput.bind(this), 0)\r\n                else resolve(totalError/testSet.length)\r\n            }\r\n            testInput()\r\n        })\r\n    }\r\n\r\n    resetDeltaWeights () {\r\n        this.layers.forEach((layer, li) => {\r\n            li && layer.neurons.forEach(neuron => {\r\n                neuron.deltaWeights = neuron.weights.map(dw => 0)\r\n            })\r\n        })\r\n    }\r\n\r\n    applyDeltaWeights () {\r\n        this.layers.forEach((layer, li) => {\r\n            li && layer.neurons.forEach(neuron => {\r\n                neuron.deltaWeights.forEach((dw, dwi) => {\r\n\r\n                    if(this.l2!=undefined) {\r\n                        this.l2Error += 0.5 * this.l2 * neuron.weights[dwi]**2\r\n                    }\r\n\r\n                    if(this.l1!=undefined) {\r\n                        this.l1Error += this.l1 * Math.abs(neuron.weights[dwi])\r\n                    }\r\n\r\n                    neuron.weights[dwi] = this.weightUpdateFn.bind(this, neuron.weights[dwi], dw, neuron, dwi)()\r\n\r\n                    if(this.maxNorm!=undefined) {\r\n                        this.maxNormTotal += neuron.weights[dwi]**2\r\n                    }\r\n                })\r\n                neuron.bias = this.weightUpdateFn.bind(this, neuron.bias, neuron.deltaBias, neuron)()\r\n            })\r\n        })\r\n\r\n        if(this.maxNorm!=undefined) {\r\n            this.maxNormTotal = Math.sqrt(this.maxNormTotal)\r\n            NetMath.maxNorm.bind(this)()\r\n        }\r\n    }\r\n\r\n    toJSON () {\r\n        return {\r\n            layers: this.layers.map(layer => {\r\n                return {\r\n                    neurons: layer.neurons.map(neuron => {\r\n                        return {\r\n                            bias: neuron.bias,\r\n                            weights: neuron.weights\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    fromJSON (data) {\r\n\r\n        if(data === undefined || data === null) {\r\n            throw new Error(\"No JSON data given to import.\")\r\n        }\r\n\r\n        this.layers = data.layers.map(layer => new Layer(layer.neurons.length, layer.neurons))\r\n        this.state = \"constructed\"\r\n        this.initLayers()\r\n    }\r\n\r\n    format (string) {\r\n        return string && typeof string==\"string\" ? string.replace(/(_|\\s)/g, \"\").toLowerCase() : string\r\n    }\r\n}\r\n\r\ntypeof window==\"undefined\" && (global.Network = Network)","\"use strict\"\r\n\r\nclass Neuron {\r\n    \r\n    constructor (importedData) {\r\n        if(importedData){\r\n            this.imported = true\r\n            this.weights = importedData.weights || []\r\n            this.bias = importedData.bias\r\n        }\r\n    }\r\n\r\n    init (size, {adaptiveLR, activationConfig, eluAlpha}={}) {\r\n\r\n        this.deltaWeights = this.weights.map(v => 0)\r\n\r\n        switch(adaptiveLR) {\r\n            case \"gain\":\r\n                this.weightGains = [...new Array(size)].map(v => 1)\r\n                this.biasGain = 1\r\n                break\r\n\r\n            case \"adagrad\":\r\n            case \"rmsprop\":\r\n            case \"adadelta\":\r\n                this.biasCache = 0\r\n                this.weightsCache = [...new Array(size)].map(v => 0)\r\n\r\n                if(adaptiveLR==\"adadelta\"){\r\n                    this.adadeltaCache = [...new Array(size)].map(v => 0)\r\n                    this.adadeltaBiasCache = 0\r\n                }\r\n                break\r\n\r\n            case \"adam\":\r\n                this.m = 0\r\n                this.v = 0\r\n                break\r\n        }\r\n\r\n        if(activationConfig==\"rrelu\") {\r\n            this.rreluSlope = Math.random() * 0.001\r\n            \r\n        }else if(activationConfig==\"elu\") {\r\n            this.eluAlpha = eluAlpha\r\n        }\r\n    }\r\n}\r\n\r\ntypeof window==\"undefined\" && (global.Neuron = Neuron)"]}