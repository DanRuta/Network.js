"use strict";function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}return Array.from(arr)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{!_n&&_i.return&&_i.return()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr))return arr;if(Symbol.iterator in Object(arr))return sliceIterator(arr,i);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),ConvLayer=function(){function ConvLayer(size){var _ref=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},filterSize=_ref.filterSize,zeroPadding=_ref.zeroPadding,stride=_ref.stride,activation=_ref.activation;_classCallCheck(this,ConvLayer),filterSize&&(this.filterSize=filterSize),stride&&(this.stride=stride),size&&(this.size=size),this.zeroPadding=zeroPadding,void 0!=activation&&(this.activation=!("boolean"==typeof activation&&!activation)&&("function"==typeof activation?activation:NetMath[NetUtil.format(activation)].bind(this))),this.state="not-initialised"}return _createClass(ConvLayer,[{key:"assignNext",value:function(layer){this.nextLayer=layer}},{key:"assignPrev",value:function(layer,layerIndex){switch(this.prevLayer=layer,this.size=this.size||4,this.filterSize=this.filterSize||this.net.conv.filterSize||3,this.stride=this.stride||this.net.conv.stride||1,!0){case layer instanceof FCLayer:this.channels=this.net.channels||1;break;case layer instanceof ConvLayer:this.channels=layer.size;break;case layer instanceof PoolLayer:this.channels=layer.activations.length}void 0==this.zeroPadding&&(this.zeroPadding=void 0==this.net.conv.zeroPadding?Math.floor(this.filterSize/2):this.net.conv.zeroPadding);var prevLayerOutWidth=layer instanceof FCLayer?Math.max(Math.floor(Math.sqrt(layer.size/this.channels)),1):layer.outMapSize;if(this.inMapValuesCount=Math.pow(prevLayerOutWidth,2),this.inZPMapValuesCount=Math.pow(prevLayerOutWidth+2*this.zeroPadding,2),this.outMapSize=(prevLayerOutWidth-this.filterSize+2*this.zeroPadding)/this.stride+1,this.outMapSize%1!=0)throw new Error("Misconfigured hyperparameters. Activation volume dimensions would be "+this.outMapSize+" in conv layer at index "+layerIndex);this.filters=[].concat(_toConsumableArray(new Array(this.size))).map(function(f){return new Filter})}},{key:"init",value:function(){var _this=this;this.filters.forEach(function(filter){filter.weights=[].concat(_toConsumableArray(new Array(_this.channels))).map(function(channelWeights){return[].concat(_toConsumableArray(new Array(_this.filterSize))).map(function(weightsRow){return _this.net.weightsInitFn(_this.filterSize*(_this.prevLayer.channels||1),_this.weightsConfig)})}),filter.activationMap=[].concat(_toConsumableArray(new Array(_this.outMapSize))).map(function(row){return[].concat(_toConsumableArray(new Array(_this.outMapSize))).map(function(v){return 0})}),filter.errorMap=[].concat(_toConsumableArray(new Array(_this.outMapSize))).map(function(row){return[].concat(_toConsumableArray(new Array(_this.outMapSize))).map(function(v){return 0})}),filter.dropoutMap=filter.activationMap.map(function(row){return row.map(function(v){return!1})}),filter.bias=.2*Math.random()-.1,filter.init({updateFn:_this.net.updateFn,activation:_this.net.activationConfig,eluAlpha:_this.net.eluAlpha})})}},{key:"forward",value:function(){for(var activations=NetUtil.getActivations(this.prevLayer),filterI=0;filterI<this.size;filterI++){var filter=this.filters[filterI];filter.sumMap=NetUtil.convolve({input:activations,zeroPadding:this.zeroPadding,weights:filter.weights,channels:this.channels,stride:this.stride,bias:filter.bias});for(var sumY=0;sumY<filter.sumMap.length;sumY++)for(var sumX=0;sumX<filter.sumMap.length;sumX++)"training"==this.state&&(filter.dropoutMap[sumY][sumX]=Math.random()>this.net.dropout)?filter.activationMap[sumY][sumX]=0:this.activation?filter.activationMap[sumY][sumX]=this.activation(filter.sumMap[sumY][sumX],!1,filter)/(this.net.dropout||1):filter.activationMap[sumY][sumX]=filter.sumMap[sumY][sumX]}}},{key:"backward",value:function(){if(this.nextLayer instanceof FCLayer)for(var filterI=0;filterI<this.filters.length;filterI++)for(var filter=this.filters[filterI],emY=0;emY<filter.errorMap.length;emY++)for(var emX=0;emX<filter.errorMap.length;emX++)for(var weightIndex=filterI*Math.pow(this.outMapSize,2)+emY*filter.errorMap.length+emX,neuronI=0;neuronI<this.nextLayer.neurons.length;neuronI++){var neuron=this.nextLayer.neurons[neuronI];filter.errorMap[emY][emX]+=neuron.error*neuron.weights[weightIndex]}else if(this.nextLayer instanceof ConvLayer)for(var _filterI=0;_filterI<this.filters.length;_filterI++)NetUtil.buildConvErrorMap(this.nextLayer,this.filters[_filterI].errorMap,_filterI);else for(var _filterI2=0;_filterI2<this.filters.length;_filterI2++)for(var _filter=this.filters[_filterI2],row=0;row<_filter.errorMap.length;row++)for(var col=0;col<_filter.errorMap.length;col++)_filter.errorMap[row][col]=this.nextLayer.errors[_filterI2][row][col];for(var _filterI3=0;_filterI3<this.filters.length;_filterI3++)for(var _filter2=this.filters[_filterI3],_row=0;_row<_filter2.errorMap.length;_row++)for(var _col=0;_col<_filter2.errorMap[0].length;_col++)_filter2.dropoutMap[_row][_col]?_filter2.errorMap[_row][_col]=0:this.activation&&(_filter2.errorMap[_row][_col]*=this.activation(_filter2.sumMap[_row][_col],!0,_filter2));NetUtil.buildConvDWeights(this)}},{key:"resetDeltaWeights",value:function(){for(var filterI=0;filterI<this.filters.length;filterI++){for(var filter=this.filters[filterI],channel=0;channel<filter.deltaWeights.length;channel++)for(var row=0;row<filter.deltaWeights[0].length;row++)for(var col=0;col<filter.deltaWeights[0][0].length;col++)filter.deltaWeights[channel][row][col]=0;for(var _row2=0;_row2<filter.dropoutMap.length;_row2++)for(var _col2=0;_col2<filter.dropoutMap[0].length;_col2++)filter.dropoutMap[_row2][_col2]=!1}}},{key:"applyDeltaWeights",value:function(){for(var filterI=0;filterI<this.filters.length;filterI++){for(var filter=this.filters[filterI],channel=0;channel<filter.deltaWeights.length;channel++)for(var row=0;row<filter.deltaWeights[0].length;row++)for(var col=0;col<filter.deltaWeights[0][0].length;col++)void 0!=this.net.l2&&(this.net.l2Error+=.5*this.net.l2*Math.pow(filter.weights[channel][row][col],2)),void 0!=this.net.l1&&(this.net.l1Error+=this.net.l1*Math.abs(filter.weights[channel][row][col])),filter.weights[channel][row][col]=this.net.weightUpdateFn.bind(this.net,filter.weights[channel][row][col],filter.deltaWeights[channel][row][col],filter,[channel,row,col])(),void 0!=this.net.maxNorm&&(this.net.maxNormTotal+=Math.pow(filter.weights[channel][row][col],2));filter.bias=this.net.weightUpdateFn.bind(this.net,filter.bias,filter.deltaBias,filter)()}}},{key:"toJSON",value:function(){return{weights:this.filters.map(function(filter){return{bias:filter.bias,weights:filter.weights}})}}},{key:"fromJSON",value:function(data,layerIndex){this.filters.forEach(function(filter,fi){if(data.weights[fi].weights.length!=filter.weights.length)throw new Error("Mismatched weights depth. Given: "+data.weights[fi].weights.length+" Existing: "+filter.weights.length+". At: layers["+layerIndex+"], filters["+fi+"]");if(data.weights[fi].weights[0].length!=filter.weights[0].length)throw new Error("Mismatched weights size. Given: "+data.weights[fi].weights[0].length+" Existing: "+filter.weights[0].length+". At: layers["+layerIndex+"], filters["+fi+"]");filter.bias=data.weights[fi].bias,filter.weights=data.weights[fi].weights})}}]),ConvLayer}();"undefined"==typeof window&&(exports.ConvLayer=ConvLayer);var FCLayer=function(){function FCLayer(size){_classCallCheck(this,FCLayer),this.size=size,this.neurons=[].concat(_toConsumableArray(new Array(size))).map(function(n){return new Neuron}),this.state="not-initialised"}return _createClass(FCLayer,[{key:"assignNext",value:function(layer){this.nextLayer=layer}},{key:"assignPrev",value:function(layer){this.prevLayer=layer}},{key:"init",value:function(){var _this2=this;this.neurons.forEach(function(neuron){var weightsCount=void 0;switch(_this2.prevLayer.constructor.name){case"FCLayer":weightsCount=_this2.prevLayer.size;break;case"ConvLayer":weightsCount=_this2.prevLayer.filters.length*Math.pow(_this2.prevLayer.outMapSize,2);break;case"PoolLayer":weightsCount=_this2.prevLayer.activations.length*Math.pow(_this2.prevLayer.outMapSize,2)}neuron.weights=_this2.net.weightsInitFn(weightsCount,_this2.weightsConfig),neuron.bias=.2*Math.random()-.1,neuron.init({updateFn:_this2.net.updateFn,activationConfig:_this2.net.activationConfig,eluAlpha:_this2.net.eluAlpha})})}},{key:"forward",value:function(){var _this3=this;this.neurons.forEach(function(neuron,ni){if("training"==_this3.state&&(neuron.dropped=Math.random()>_this3.net.dropout))neuron.activation=0;else{neuron.sum=neuron.bias;for(var activations=NetUtil.getActivations(_this3.prevLayer),ai=0;ai<activations.length;ai++)neuron.sum+=activations[ai]*neuron.weights[ai];neuron.activation=_this3.activation(neuron.sum,!1,neuron)/(_this3.net.dropout||1)}})}},{key:"backward",value:function(expected){var _this4=this;this.neurons.forEach(function(neuron,ni){if(neuron.dropped)neuron.error=0,neuron.deltaBias=0;else{void 0!==expected?neuron.error=expected[ni]-neuron.activation:(neuron.derivative=_this4.activation(neuron.sum,!0,neuron),neuron.error=neuron.derivative*_this4.nextLayer.neurons.map(function(n){return n.error*(0|n.weights[ni])}).reduce(function(p,c){return p+c},0));for(var activations=NetUtil.getActivations(_this4.prevLayer),wi=0;wi<neuron.weights.length;wi++)neuron.deltaWeights[wi]+=neuron.error*activations[wi]*(1+((_this4.net.l2||0)+(_this4.net.l1||0))/_this4.net.miniBatchSize*neuron.deltaWeights[wi]);neuron.deltaBias=neuron.error}})}},{key:"resetDeltaWeights",value:function(){this.neurons.forEach(function(neuron){return neuron.deltaWeights=neuron.weights.map(function(dw){return 0})})}},{key:"applyDeltaWeights",value:function(){var _this5=this;this.neurons.forEach(function(neuron){neuron.deltaWeights.forEach(function(dw,dwi){void 0!=_this5.net.l2&&(_this5.net.l2Error+=.5*_this5.net.l2*Math.pow(neuron.weights[dwi],2)),void 0!=_this5.net.l1&&(_this5.net.l1Error+=_this5.net.l1*Math.abs(neuron.weights[dwi])),neuron.weights[dwi]=_this5.net.weightUpdateFn.bind(_this5.net,neuron.weights[dwi],dw,neuron,dwi)(),void 0!=_this5.net.maxNorm&&(_this5.net.maxNormTotal+=Math.pow(neuron.weights[dwi],2))}),neuron.bias=_this5.net.weightUpdateFn.bind(_this5.net,neuron.bias,neuron.deltaBias,neuron)()})}},{key:"toJSON",value:function(){return{weights:this.neurons.map(function(neuron){return{bias:neuron.bias,weights:neuron.weights}})}}},{key:"fromJSON",value:function(data,layerIndex){this.neurons.forEach(function(neuron,ni){if(data.weights[ni].weights.length!=neuron.weights.length)throw new Error("Mismatched weights count. Given: "+data.weights[ni].weights.length+" Existing: "+neuron.weights.length+". At layers["+layerIndex+"], neurons["+ni+"]");neuron.bias=data.weights[ni].bias,neuron.weights=data.weights[ni].weights})}}]),FCLayer}(),Layer=FCLayer;"undefined"==typeof window&&(exports.FCLayer=exports.Layer=FCLayer);var Filter=function(){function Filter(){_classCallCheck(this,Filter)}return _createClass(Filter,[{key:"init",value:function(){var _this6=this,_ref2=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},updateFn=_ref2.updateFn,activation=_ref2.activation,eluAlpha=_ref2.eluAlpha;this.weights.length;switch(this.deltaWeights=this.weights.map(function(channel){return channel.map(function(wRow){return wRow.map(function(w){return 0})})}),this.deltaBias=0,updateFn){case"gain":this.biasGain=1,this.weightGains=this.weights.map(function(channel){return channel.map(function(wRow){return wRow.map(function(w){return 1})})}),this.getWeightGain=function(_ref3){var _ref4=_slicedToArray(_ref3,3),channel=_ref4[0],row=_ref4[1],column=_ref4[2];return _this6.weightGains[channel][row][column]},this.setWeightGain=function(_ref5,v){var _ref6=_slicedToArray(_ref5,3),channel=_ref6[0],row=_ref6[1],column=_ref6[2];return _this6.weightGains[channel][row][column]=v};break;case"adagrad":case"rmsprop":case"adadelta":this.biasCache=0,this.weightsCache=this.weights.map(function(channel){return channel.map(function(wRow){return wRow.map(function(w){return 0})})}),this.getWeightsCache=function(_ref7){var _ref8=_slicedToArray(_ref7,3),channel=_ref8[0],row=_ref8[1],column=_ref8[2];return _this6.weightsCache[channel][row][column]},this.setWeightsCache=function(_ref9,v){var _ref10=_slicedToArray(_ref9,3),channel=_ref10[0],row=_ref10[1],column=_ref10[2];return _this6.weightsCache[channel][row][column]=v},"adadelta"==updateFn&&(this.adadeltaBiasCache=0,this.adadeltaCache=this.weights.map(function(channel){return channel.map(function(wRow){return wRow.map(function(w){return 0})})}),this.getAdadeltaCache=function(_ref11){var _ref12=_slicedToArray(_ref11,3),channel=_ref12[0],row=_ref12[1],column=_ref12[2];return _this6.adadeltaCache[channel][row][column]},this.setAdadeltaCache=function(_ref13,v){var _ref14=_slicedToArray(_ref13,3),channel=_ref14[0],row=_ref14[1],column=_ref14[2];return _this6.adadeltaCache[channel][row][column]=v});break;case"adam":this.m=0,this.v=0}"rrelu"==activation?this.rreluSlope=.001*Math.random():"elu"==activation&&(this.eluAlpha=eluAlpha)}},{key:"getWeight",value:function(_ref15){var _ref16=_slicedToArray(_ref15,3),channel=_ref16[0],row=_ref16[1],column=_ref16[2];return this.weights[channel][row][column]}},{key:"setWeight",value:function(_ref17,v){var _ref18=_slicedToArray(_ref17,3),channel=_ref18[0],row=_ref18[1],column=_ref18[2];this.weights[channel][row][column]=v}},{key:"getDeltaWeight",value:function(_ref19){var _ref20=_slicedToArray(_ref19,3),channel=_ref20[0],row=_ref20[1],column=_ref20[2];return this.deltaWeights[channel][row][column]}},{key:"setDeltaWeight",value:function(_ref21,v){var _ref22=_slicedToArray(_ref21,3),channel=_ref22[0],row=_ref22[1],column=_ref22[2];this.deltaWeights[channel][row][column]=v}}]),Filter}();"undefined"==typeof window&&(exports.Filter=Filter);var NetMath=function(){function NetMath(){_classCallCheck(this,NetMath)}return _createClass(NetMath,null,[{key:"sigmoid",value:function(value,prime){var val=1/(1+Math.exp(-value));return prime?val*(1-val):val}},{key:"tanh",value:function(value,prime){var exp=Math.exp(2*value);return prime?4/Math.pow(Math.exp(value)+Math.exp(-value),2)||1e-18:(exp-1)/(exp+1)||1e-18}},{key:"relu",value:function(value,prime){return prime?value>0?1:0:Math.max(value,0)}},{key:"lrelu",value:function(value,prime){return prime?value>0?1:this.lreluSlope||-5e-4:Math.max((this.lreluSlope||-5e-4)*Math.abs(value),value)}},{key:"rrelu",value:function(value,prime,neuron){return prime?value>0?1:neuron.rreluSlope:Math.max(neuron.rreluSlope,value)}},{key:"lecuntanh",value:function(value,prime){return prime?1.15333*Math.pow(NetMath.sech(2/3*value),2):1.7159*NetMath.tanh(2/3*value)}},{key:"elu",value:function(value,prime,neuron){return prime?value>=0?1:NetMath.elu(value,!1,neuron)+neuron.eluAlpha:value>=0?value:neuron.eluAlpha*(Math.exp(value)-1)}},{key:"crossentropy",value:function(target,output){return output.map(function(value,vi){return target[vi]*Math.log(value+1e-15)+(1-target[vi])*Math.log(1+1e-15-value)}).reduce(function(p,c){return p-c},0)}},{key:"meansquarederror",value:function(calculated,desired){return calculated.map(function(output,index){return Math.pow(output-desired[index],2)}).reduce(function(prev,curr){return prev+curr},0)/calculated.length}},{key:"vanillaupdatefn",value:function(value,deltaValue){return value+this.learningRate*deltaValue}},{key:"gain",value:function(value,deltaValue,neuron,weightI){var newVal=value+this.learningRate*deltaValue*(null==weightI?neuron.biasGain:neuron.getWeightGain(weightI));return newVal<=0&&value>0||newVal>=0&&value<0?null!=weightI?neuron.setWeightGain(weightI,Math.max(.95*neuron.getWeightGain(weightI),.5)):neuron.biasGain=Math.max(.95*neuron.biasGain,.5):null!=weightI?neuron.setWeightGain(weightI,Math.min(neuron.getWeightGain(weightI)+.05,5)):neuron.biasGain=Math.min(neuron.biasGain+.05,5),newVal}},{key:"adagrad",value:function(value,deltaValue,neuron,weightI){return null!=weightI?neuron.setWeightsCache(weightI,neuron.getWeightsCache(weightI)+Math.pow(deltaValue,2)):neuron.biasCache+=Math.pow(deltaValue,2),value+this.learningRate*deltaValue/(1e-6+Math.sqrt(null!=weightI?neuron.getWeightsCache(weightI):neuron.biasCache))}},{key:"rmsprop",value:function(value,deltaValue,neuron,weightI){return null!=weightI?neuron.setWeightsCache(weightI,this.rmsDecay*neuron.getWeightsCache(weightI)+(1-this.rmsDecay)*Math.pow(deltaValue,2)):neuron.biasCache=this.rmsDecay*neuron.biasCache+(1-this.rmsDecay)*Math.pow(deltaValue,2),value+this.learningRate*deltaValue/(1e-6+Math.sqrt(null!=weightI?neuron.getWeightsCache(weightI):neuron.biasCache))}},{key:"adam",value:function(value,deltaValue,neuron){neuron.m=.9*neuron.m+(1-.9)*deltaValue;var mt=neuron.m/(1-Math.pow(.9,this.iterations+1));neuron.v=.999*neuron.v+(1-.999)*Math.pow(deltaValue,2);var vt=neuron.v/(1-Math.pow(.999,this.iterations+1));return value+this.learningRate*mt/(Math.sqrt(vt)+1e-8)}},{key:"adadelta",value:function(value,deltaValue,neuron,weightI){if(null!=weightI){neuron.setWeightsCache(weightI,this.rho*neuron.getWeightsCache(weightI)+(1-this.rho)*Math.pow(deltaValue,2));var newVal=value+Math.sqrt((neuron.getAdadeltaCache(weightI)+1e-6)/(neuron.getWeightsCache(weightI)+1e-6))*deltaValue;return neuron.setAdadeltaCache(weightI,this.rho*neuron.getAdadeltaCache(weightI)+(1-this.rho)*Math.pow(deltaValue,2)),newVal}neuron.biasCache=this.rho*neuron.biasCache+(1-this.rho)*Math.pow(deltaValue,2);var _newVal=value+Math.sqrt((neuron.adadeltaBiasCache+1e-6)/(neuron.biasCache+1e-6))*deltaValue;return neuron.adadeltaBiasCache=this.rho*neuron.adadeltaBiasCache+(1-this.rho)*Math.pow(deltaValue,2),_newVal}},{key:"uniform",value:function(size,_ref23){for(var limit=_ref23.limit,values=[],i=0;i<size;i++)values.push(2*Math.random()*limit-limit);return values}},{key:"gaussian",value:function(size,_ref24){for(var mean=_ref24.mean,stdDeviation=_ref24.stdDeviation,values=[],i=0;i<size;i++){var x1=void 0,x2=void 0,r=void 0;do{x1=2*Math.random()-1,x2=2*Math.random()-1,r=Math.pow(x1,2)+Math.pow(x2,2)}while(r>=1||!r);values.push(mean+x1*Math.sqrt(-2*Math.log(r)/r)*stdDeviation)}return values}},{key:"xaviernormal",value:function(size,_ref25){var fanIn=_ref25.fanIn,fanOut=_ref25.fanOut;return fanOut||0==fanOut?NetMath.gaussian(size,{mean:0,stdDeviation:Math.sqrt(2/(fanIn+fanOut))}):NetMath.lecunnormal(size,{fanIn:fanIn})}},{key:"xavieruniform",value:function(size,_ref26){var fanIn=_ref26.fanIn,fanOut=_ref26.fanOut;return fanOut||0==fanOut?NetMath.uniform(size,{limit:Math.sqrt(6/(fanIn+fanOut))}):NetMath.lecununiform(size,{fanIn:fanIn})}},{key:"lecunnormal",value:function(size,_ref27){var fanIn=_ref27.fanIn;return NetMath.gaussian(size,{mean:0,stdDeviation:Math.sqrt(1/fanIn)})}},{key:"lecununiform",value:function(size,_ref28){var fanIn=_ref28.fanIn;return NetMath.uniform(size,{limit:Math.sqrt(3/fanIn)})}},{key:"maxPool",value:function(layer,channel){for(var activations=NetUtil.getActivations(layer.prevLayer,channel,layer.inMapValuesCount),row=0;row<layer.outMapSize;row++)for(var col=0;col<layer.outMapSize;col++){for(var rowStart=row*layer.stride,colStart=col*layer.stride,activation=activations[rowStart*layer.prevLayerOutWidth+colStart],filterRow=0;filterRow<layer.size;filterRow++)for(var filterCol=0;filterCol<layer.size;filterCol++){var value=activations[(rowStart+filterRow)*layer.prevLayerOutWidth+(colStart+filterCol)];value>activation&&(activation=value,layer.indeces[channel][row][col]=[filterRow,filterCol])}layer.activations[channel][row][col]=activation}}},{key:"softmax",value:function(values){var total=values.reduce(function(prev,curr){return prev+curr},0);return values.map(function(value){return value/total})}},{key:"sech",value:function(value){return 2*Math.exp(-value)/(1+Math.exp(-2*value))}},{key:"standardDeviation",value:function(arr){var avg=arr.reduce(function(p,c){return p+c})/arr.length,diffs=arr.map(function(v){return v-avg}).map(function(v){return Math.pow(v,2)});return Math.sqrt(diffs.reduce(function(p,c){return p+c})/diffs.length)}},{key:"maxNorm",value:function(){if(this.maxNormTotal>this.maxNorm){var multiplier=this.maxNorm/(1e-18+this.maxNormTotal);this.layers.forEach(function(layer,li){li&&layer.neurons.forEach(function(neuron){neuron.weights.forEach(function(w,wi){return neuron.setWeight(wi,neuron.getWeight(wi)*multiplier)})})})}this.maxNormTotal=0}}]),NetMath}();"undefined"==typeof window&&(exports.NetMath=NetMath);var NetUtil=function(){function NetUtil(){_classCallCheck(this,NetUtil)}return _createClass(NetUtil,null,[{key:"format",value:function(value){var type=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"string";switch(!0){case"string"==type&&"string"==typeof value:value=value.replace(/(_|\s)/g,"").toLowerCase();break;case"time"==type&&"number"==typeof value:var date=new Date(value),formatted=[];value<1e3?formatted.push(date.getMilliseconds()+"ms"):(value>=36e5&&formatted.push(date.getHours()+"h"),value>=6e4&&formatted.push(date.getMinutes()+"m"),formatted.push(date.getSeconds()+"s")),value=formatted.join(" ")}return value}},{key:"shuffle",value:function(arr){for(var i=arr.length;i;i--){var j=Math.floor(Math.random()*i),x=arr[i-1];arr[i-1]=arr[j],arr[j]=x}}},{key:"addZeroPadding",value:function(map,zP){for(var data=[],row=0;row<map.length;row++)data.push(map[row].slice(0));for(var extraRows=[],i=0;i<data.length+2*zP;i++)extraRows.push(0);for(var col=0;col<data.length;col++)for(var _i=0;_i<zP;_i++)data[col].splice(0,0,0),data[col].splice(data.length+1,data.length,0);for(var _i2=0;_i2<zP;_i2++)data.splice(0,0,extraRows.slice(0)),data.splice(data.length,data.length-1,extraRows.slice(0));return data}},{key:"arrayToMap",value:function(arr,size){for(var map=[],i=0;i<size;i++){map[i]=[];for(var j=0;j<size;j++)map[i][j]=arr[i*size+j]}return map}},{key:"arrayToVolume",value:function(arr,channels){for(var vol=[],size=Math.sqrt(arr.length/channels),mapValues=Math.pow(size,2),d=0;d<Math.floor(arr.length/mapValues);d++){for(var map=[],i=0;i<size;i++){map[i]=[];for(var j=0;j<size;j++)map[i][j]=arr[d*mapValues+i*size+j]}vol[d]=map}return vol}},{key:"convolve",value:function(_ref29){for(var input=_ref29.input,zeroPadding=_ref29.zeroPadding,weights=_ref29.weights,channels=_ref29.channels,stride=_ref29.stride,bias=_ref29.bias,inputVol=NetUtil.arrayToVolume(input,channels),outputMap=[],paddedLength=inputVol[0].length+2*zeroPadding,fSSpread=Math.floor(weights[0].length/2),di=0;di<channels;di++){inputVol[di]=NetUtil.addZeroPadding(inputVol[di],zeroPadding);for(var inputY=fSSpread;inputY<paddedLength-fSSpread;inputY+=stride){outputMap[(inputY-fSSpread)/stride]=outputMap[(inputY-fSSpread)/stride]||[];for(var inputX=fSSpread;inputX<paddedLength-fSSpread;inputX+=stride){for(var sum=0,weightsY=0;weightsY<weights[0].length;weightsY++)for(var weightsX=0;weightsX<weights[0].length;weightsX++)sum+=inputVol[di][inputY+(weightsY-fSSpread)][inputX+(weightsX-fSSpread)]*weights[di][weightsY][weightsX];outputMap[(inputY-fSSpread)/stride][(inputX-fSSpread)/stride]=(outputMap[(inputY-fSSpread)/stride][(inputX-fSSpread)/stride]||0)+sum}}}for(var outY=0;outY<outputMap.length;outY++)for(var outX=0;outX<outputMap.length;outX++)outputMap[outY][outX]+=bias;return outputMap}},{key:"buildConvErrorMap",value:function(nextLayer,errorMap,filterI){for(var zeroPadding=nextLayer.zeroPadding,paddedLength=errorMap.length+2*zeroPadding,fSSpread=Math.floor(nextLayer.filterSize/2),paddedRow=[],val=0;val<paddedLength;val++)paddedRow.push(0);for(var row=0;row<paddedLength;row++)errorMap[row]=paddedRow.slice(0);for(var nlFilterI=0;nlFilterI<nextLayer.size;nlFilterI++)for(var weights=nextLayer.filters[nlFilterI].weights[filterI],errMap=nextLayer.filters[nlFilterI].errorMap,inputY=fSSpread;inputY<paddedLength-fSSpread;inputY+=nextLayer.stride)for(var inputX=fSSpread;inputX<paddedLength-fSSpread;inputX+=nextLayer.stride)for(var weightsY=0;weightsY<nextLayer.filterSize;weightsY++)for(var weightsX=0;weightsX<nextLayer.filterSize;weightsX++)errorMap[inputY+(weightsY-fSSpread)][inputX+(weightsX-fSSpread)]+=weights[weightsY][weightsX]*errMap[(inputY-fSSpread)/nextLayer.stride][(inputX-fSSpread)/nextLayer.stride];errorMap.splice(0,zeroPadding),errorMap.splice(errorMap.length-zeroPadding,errorMap.length);for(var emXI=0;emXI<errorMap.length;emXI++)errorMap[emXI]=errorMap[emXI].splice(zeroPadding,errorMap[emXI].length-2*zeroPadding)}},{key:"buildConvDWeights",value:function(layer){for(var weightsCount=layer.filters[0].weights[0].length,fSSpread=Math.floor(weightsCount/2),channelsCount=layer.filters[0].weights.length,deltaDeltaWeights=[],weightsY=0;weightsY<weightsCount;weightsY++){deltaDeltaWeights[weightsY]=[];for(var weightsX=0;weightsX<weightsCount;weightsX++)deltaDeltaWeights[weightsY][weightsX]=0}for(var filterI=0;filterI<layer.filters.length;filterI++){for(var filter=layer.filters[filterI],channelI=0;channelI<channelsCount;channelI++)for(var inputValues=NetUtil.getActivations(layer.prevLayer,channelI,layer.inMapValuesCount),inputMap=NetUtil.addZeroPadding(NetUtil.arrayToMap(inputValues,Math.sqrt(layer.inMapValuesCount)),layer.zeroPadding),inputY=fSSpread;inputY<inputMap.length-fSSpread;inputY+=layer.stride)for(var inputX=fSSpread;inputX<inputMap.length-fSSpread;inputX+=layer.stride){for(var _weightsY=0;_weightsY<weightsCount;_weightsY++)for(var _weightsX=0;_weightsX<weightsCount;_weightsX++){var activation=inputMap[inputY-fSSpread+_weightsY][inputX-fSSpread+_weightsX];deltaDeltaWeights[_weightsY][_weightsX]+=activation*(1+((layer.net.l2||0)+(layer.net.l1||0))/layer.net.miniBatchSize*filter.weights[channelI][_weightsY][_weightsX])}for(var error=filter.errorMap[(inputY-fSSpread)/layer.stride][(inputX-fSSpread)/layer.stride],_weightsY2=0;_weightsY2<weightsCount;_weightsY2++)for(var _weightsX2=0;_weightsX2<weightsCount;_weightsX2++)filter.deltaWeights[channelI][_weightsY2][_weightsX2]+=deltaDeltaWeights[_weightsY2][_weightsX2]*error,deltaDeltaWeights[_weightsY2][_weightsX2]=0}for(var eY=0;eY<filter.errorMap.length;eY++)for(var eX=0;eX<filter.errorMap.length;eX++)filter.deltaBias+=filter.errorMap[eY][eX]}}},{key:"getActivations",value:function(layer,mapStartI,mapSize){var returnArr=[];if(1==arguments.length)if(layer instanceof FCLayer)for(var ni=0;ni<layer.neurons.length;ni++)returnArr.push(layer.neurons[ni].activation);else if(layer instanceof ConvLayer)for(var fi=0;fi<layer.filters.length;fi++)for(var rowI=0;rowI<layer.filters[fi].activationMap.length;rowI++)for(var colI=0;colI<layer.filters[fi].activationMap[rowI].length;colI++)returnArr.push(layer.filters[fi].activationMap[rowI][colI]);else for(var channel=0;channel<layer.activations.length;channel++)for(var row=0;row<layer.activations[0].length;row++)for(var col=0;col<layer.activations[0].length;col++)returnArr.push(layer.activations[channel][row][col]);else if(layer instanceof FCLayer)for(var i=mapStartI*mapSize;i<(mapStartI+1)*mapSize;i++)returnArr.push(layer.neurons[i].activation);else if(layer instanceof ConvLayer)for(var _row3=0;_row3<layer.filters[mapStartI].activationMap.length;_row3++)for(var _col3=0;_col3<layer.filters[mapStartI].activationMap[_row3].length;_col3++)returnArr.push(layer.filters[mapStartI].activationMap[_row3][_col3]);else for(var _row4=0;_row4<layer.activations[mapStartI].length;_row4++)for(var _col4=0;_col4<layer.activations[mapStartI].length;_col4++)returnArr.push(layer.activations[mapStartI][_row4][_col4]);return returnArr}}]),NetUtil}();"undefined"==typeof window&&(exports.NetUtil=NetUtil);var Network=function(){function Network(){var _ref30=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},learningRate=_ref30.learningRate,_ref30$layers=_ref30.layers,layers=void 0===_ref30$layers?[]:_ref30$layers,_ref30$updateFn=_ref30.updateFn,updateFn=void 0===_ref30$updateFn?"vanillaupdatefn":_ref30$updateFn,_ref30$activation=_ref30.activation,activation=void 0===_ref30$activation?"sigmoid":_ref30$activation,_ref30$cost=_ref30.cost,cost=void 0===_ref30$cost?"meansquarederror":_ref30$cost,rmsDecay=_ref30.rmsDecay,rho=_ref30.rho,lreluSlope=_ref30.lreluSlope,eluAlpha=_ref30.eluAlpha,_ref30$dropout=_ref30.dropout,dropout=void 0===_ref30$dropout?1:_ref30$dropout,_ref30$l=_ref30.l2,l2=void 0===_ref30$l||_ref30$l,_ref30$l2=_ref30.l1,l1=void 0===_ref30$l2||_ref30$l2,maxNorm=_ref30.maxNorm,weightsConfig=_ref30.weightsConfig,channels=_ref30.channels,conv=_ref30.conv,pool=_ref30.pool;switch(_classCallCheck(this,Network),this.state="not-defined",this.layers=[],this.conv={},this.pool={},this.epochs=0,this.iterations=0,this.dropout=0==dropout?1:dropout,this.error=0,activation=NetUtil.format(activation),updateFn=NetUtil.format(updateFn),cost=NetUtil.format(cost),l2&&(this.l2="boolean"==typeof l2?.001:l2,this.l2Error=0),l1&&(this.l1="boolean"==typeof l1?.005:l1,this.l1Error=0),maxNorm&&(this.maxNorm="boolean"==typeof maxNorm&&maxNorm?1e3:maxNorm,this.maxNormTotal=0),learningRate&&(this.learningRate=learningRate),channels&&(this.channels=channels),conv&&(void 0!=conv.filterSize&&(this.conv.filterSize=conv.filterSize),void 0!=conv.zeroPadding&&(this.conv.zeroPadding=conv.zeroPadding),void 0!=conv.stride&&(this.conv.stride=conv.stride)),pool&&(pool.size&&(this.pool.size=pool.size),pool.stride&&(this.pool.stride=pool.stride)),updateFn){case"rmsprop":this.learningRate=void 0==this.learningRate?.001:this.learningRate;break;case"adam":this.learningRate=void 0==this.learningRate?.01:this.learningRate;break;case"adadelta":this.rho=null==rho?.95:rho;break;default:if(void 0==this.learningRate)switch(activation){case"relu":case"lrelu":case"rrelu":case"elu":this.learningRate=.01;break;case"tanh":case"lecuntanh":this.learningRate=.001;break;default:this.learningRate=.2}}if(this.updateFn=[!1,null,void 0].includes(updateFn)?"vanillaupdatefn":updateFn,this.weightUpdateFn=NetMath[this.updateFn],this.activation="function"==typeof activation?activation:NetMath[activation].bind(this),this.activationConfig=activation,this.cost="function"==typeof cost?cost:NetMath[cost],"rmsprop"==this.updateFn&&(this.rmsDecay=void 0==rmsDecay?.99:rmsDecay),this.lreluSlope=void 0==lreluSlope?-5e-4:lreluSlope,this.eluAlpha=void 0==eluAlpha?1:eluAlpha,this.weightsConfig={distribution:"xavieruniform"},void 0!=weightsConfig&&weightsConfig.distribution&&(this.weightsConfig.distribution=NetUtil.format(weightsConfig.distribution)),"uniform"==this.weightsConfig.distribution?this.weightsConfig.limit=weightsConfig&&void 0!=weightsConfig.limit?weightsConfig.limit:.1:"gaussian"==this.weightsConfig.distribution&&(this.weightsConfig.mean=weightsConfig.mean||0,this.weightsConfig.stdDeviation=weightsConfig.stdDeviation||.05),"function"==typeof this.weightsConfig.distribution?this.weightsInitFn=this.weightsConfig.distribution:this.weightsInitFn=NetMath[this.weightsConfig.distribution],layers.length)switch(!0){case layers.every(function(item){return Number.isInteger(item)}):this.layers=layers.map(function(size){return new FCLayer(size)}),this.state="constructed",this.initLayers();break;case layers.every(function(layer){return layer instanceof FCLayer||layer instanceof ConvLayer||layer instanceof PoolLayer}):this.state="constructed",this.layers=layers,this.initLayers();break;default:throw new Error("There was an error constructing from the layers given.")}}return _createClass(Network,[{key:"initLayers",value:function(input,expected){switch(this.state){case"initialised":return;case"not-defined":this.layers[0]=new FCLayer(input),this.layers[1]=new FCLayer(Math.ceil(input/expected>5?expected+Math.abs(input-expected)/4:input+expected)),this.layers[2]=new FCLayer(Math.ceil(expected))}this.layers.forEach(this.joinLayer.bind(this)),this.state="initialised"}},{key:"joinLayer",value:function(layer,layerIndex){layer.net=this,layer.activation=void 0==layer.activation?this.activation:layer.activation,layer.weightsConfig={},Object.assign(layer.weightsConfig,this.weightsConfig),layerIndex&&(this.layers[layerIndex-1].assignNext(layer),layer.assignPrev(this.layers[layerIndex-1],layerIndex),layer.weightsConfig.fanIn=layer.prevLayer.size,layer.prevLayer.weightsConfig.fanOut=layer.size,layer.init(),layer.state="initialised")}},{key:"forward",value:function(data){if("initialised"!=this.state)throw new Error("The network layers have not been initialised.");if(void 0===data||null===data)throw new Error("No data passed to Network.forward()");return data.length!=this.layers[0].neurons.length&&console.warn("Input data length did not match input layer neurons count."),this.layers[0].neurons.forEach(function(neuron,ni){return neuron.activation=data[ni]}),this.layers.forEach(function(layer,li){return li&&layer.forward(data)}),this.layers[this.layers.length-1].neurons.map(function(n){return n.activation})}},{key:"backward",value:function(expected){if(void 0===expected)throw new Error("No data passed to Network.backward()");expected.length!=this.layers[this.layers.length-1].neurons.length&&console.warn("Expected data length did not match output layer neurons count.",expected),this.layers[this.layers.length-1].backward(expected);for(var layerIndex=this.layers.length-2;layerIndex>0;layerIndex--)this.layers[layerIndex].backward()}},{key:"train",value:function(dataSet){var _this7=this,_ref31=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},_ref31$epochs=_ref31.epochs,epochs=void 0===_ref31$epochs?1:_ref31$epochs,callback=_ref31.callback,_ref31$log=_ref31.log,log=void 0===_ref31$log||_ref31$log,_ref31$miniBatchSize=_ref31.miniBatchSize,miniBatchSize=void 0===_ref31$miniBatchSize?1:_ref31$miniBatchSize,_ref31$shuffle=_ref31.shuffle,shuffle=void 0!==_ref31$shuffle&&_ref31$shuffle;return this.miniBatchSize="boolean"==typeof miniBatchSize&&miniBatchSize?dataSet[0].expected.length:miniBatchSize,new Promise(function(resolve,reject){if(shuffle&&NetUtil.shuffle(dataSet),log&&console.log("Training started. Epochs: "+epochs+" Batch Size: "+_this7.miniBatchSize),void 0!==dataSet&&null!==dataSet){"initialised"!=_this7.state&&_this7.initLayers(dataSet[0].input.length,(dataSet[0].expected||dataSet[0].output).length),_this7.layers.forEach(function(layer){return layer.state="training"});var iterationIndex=0,epochsCounter=0,startTime=Date.now(),doEpoch=function(){_this7.epochs++,_this7.error=0,iterationIndex=0,void 0!=_this7.l2Error&&(_this7.l2Error=0),void 0!=_this7.l1Error&&(_this7.l1Error=0),doIteration()},doIteration=function doIteration(){if(dataSet[iterationIndex].hasOwnProperty("input")&&(dataSet[iterationIndex].hasOwnProperty("expected")||dataSet[iterationIndex].hasOwnProperty("output"))){var input=dataSet[iterationIndex].input,output=_this7.forward(input),target=dataSet[iterationIndex].expected||dataSet[iterationIndex].output;_this7.backward(target),++iterationIndex%_this7.miniBatchSize==0?(_this7.applyDeltaWeights(),_this7.resetDeltaWeights()):iterationIndex>=dataSet.length&&_this7.applyDeltaWeights();var iterationError=_this7.cost(target,output),elapsed=Date.now()-startTime;_this7.error+=iterationError,_this7.iterations++,"function"==typeof callback&&callback({iterations:_this7.iterations,error:iterationError,elapsed:elapsed,input:input}),iterationIndex<dataSet.length?setTimeout(doIteration.bind(_this7),0):(epochsCounter++,log&&console.log("Epoch: "+_this7.epochs+" Error: "+_this7.error/iterationIndex+(void 0==_this7.l2?"":" L2 Error: "+_this7.l2Error/iterationIndex),"\nElapsed: "+NetUtil.format(elapsed,"time")+" Average Duration: "+NetUtil.format(elapsed/epochsCounter,"time")),epochsCounter<epochs?doEpoch():(_this7.layers.forEach(function(layer){return layer.state="initialised"}),log&&console.log("Training finished. Total time: "+NetUtil.format(elapsed,"time")+"  Average iteration time: "+NetUtil.format(elapsed/iterationIndex,"time")),resolve()))}else reject("Data set must be a list of objects with keys: 'input' and 'expected' (or 'output')")};_this7.resetDeltaWeights(),doEpoch()}else reject("No data provided")})}},{key:"test",value:function(testSet){var _this8=this,_ref32=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},_ref32$log=_ref32.log,log=void 0===_ref32$log||_ref32$log,callback=_ref32.callback;return new Promise(function(resolve,reject){void 0!==testSet&&null!==testSet||reject("No data provided"),log&&console.log("Testing started");var totalError=0,iterationIndex=0,startTime=Date.now();!function testInput(){var input=testSet[iterationIndex].input,output=_this8.forward(input),target=testSet[iterationIndex].expected||testSet[iterationIndex].output,elapsed=Date.now()-startTime,iterationError=_this8.cost(target,output);totalError+=iterationError,iterationIndex++,"function"==typeof callback&&callback({iterations:iterationIndex,error:iterationError,elapsed:elapsed,input:input}),iterationIndex<testSet.length?setTimeout(testInput.bind(_this8),0):(log&&console.log("Testing finished. Total time: "+NetUtil.format(elapsed,"time")+"  Average iteration time: "+NetUtil.format(elapsed/iterationIndex,"time")),resolve(totalError/testSet.length))}()})}},{key:"resetDeltaWeights",value:function(){this.layers.forEach(function(layer,li){return li&&layer.resetDeltaWeights()})}},{key:"applyDeltaWeights",value:function(){this.layers.forEach(function(layer,li){return li&&layer.applyDeltaWeights()}),void 0!=this.maxNorm&&(this.maxNormTotal=Math.sqrt(this.maxNormTotal),NetMath.maxNorm.bind(this)())}},{key:"toJSON",value:function(){return{layers:this.layers.map(function(layer){return layer.toJSON()})}}},{key:"fromJSON",value:function(data){if(void 0===data||null===data)throw new Error("No JSON data given to import.");if(data.layers.length!=this.layers.length)throw new Error("Mismatched layers ("+data.layers.length+" layers in import data, but "+this.layers.length+" configured)");this.resetDeltaWeights(),this.layers.forEach(function(layer,li){return li&&layer.fromJSON(data.layers[li],li)})}}],[{key:"version",get:function(){return"2.0.0"}}]),Network}();"undefined"==typeof window&&(exports.Network=Network);var Neuron=function(){function Neuron(){_classCallCheck(this,Neuron)}return _createClass(Neuron,[{key:"init",value:function(){var _this9=this,_ref33=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},updateFn=_ref33.updateFn,activation=_ref33.activation,eluAlpha=_ref33.eluAlpha,size=this.weights.length;switch(this.deltaWeights=this.weights.map(function(v){return 0}),updateFn){case"gain":this.biasGain=1,this.weightGains=[].concat(_toConsumableArray(new Array(size))).map(function(v){return 1}),this.getWeightGain=function(i){return _this9.weightGains[i]},this.setWeightGain=function(i,v){return _this9.weightGains[i]=v};break;case"adagrad":case"rmsprop":case"adadelta":this.biasCache=0,this.weightsCache=[].concat(_toConsumableArray(new Array(size))).map(function(v){return 0}),this.getWeightsCache=function(i){return _this9.weightsCache[i]},this.setWeightsCache=function(i,v){return _this9.weightsCache[i]=v},"adadelta"==updateFn&&(this.adadeltaBiasCache=0,this.adadeltaCache=[].concat(_toConsumableArray(new Array(size))).map(function(v){return 0}),this.getAdadeltaCache=function(i){return _this9.adadeltaCache[i]},this.setAdadeltaCache=function(i,v){return _this9.adadeltaCache[i]=v});break;case"adam":this.m=0,this.v=0}"rrelu"==activation?this.rreluSlope=.001*Math.random():"elu"==activation&&(this.eluAlpha=eluAlpha)}},{key:"getWeight",value:function(i){return this.weights[i]}},{key:"setWeight",value:function(i,v){this.weights[i]=v}},{key:"getDeltaWeight",value:function(i){return this.deltaWeights[i]}},{key:"setDeltaWeight",value:function(i,v){this.deltaWeights[i]=v}}]),Neuron}();"undefined"==typeof window&&(exports.Neuron=Neuron);var PoolLayer=function(){function PoolLayer(size){var _ref34=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},stride=_ref34.stride,activation=_ref34.activation;_classCallCheck(this,PoolLayer),size&&(this.size=size),stride&&(this.stride=stride),this.activation=void 0!=activation&&0!=activation&&("function"==typeof activation?activation:NetMath[NetUtil.format(activation)].bind(this))}return _createClass(PoolLayer,[{key:"init",value:function(){}},{key:"assignNext",value:function(layer){this.nextLayer=layer}},{key:"assignPrev",value:function(layer,layerIndex){var _this10=this;this.prevLayer=layer,this.size=this.size||this.net.pool.size||2,this.stride=this.stride||this.net.pool.stride||this.size;var prevLayerOutWidth=layer.outMapSize;switch(layer.constructor.name){case"FCLayer":this.channels=this.net.channels,prevLayerOutWidth=Math.max(Math.floor(Math.sqrt(layer.size/this.channels)),1);break;case"ConvLayer":this.channels=layer.size;break;case"PoolLayer":this.channels=layer.channels}if(this.prevLayerOutWidth=prevLayerOutWidth,this.outMapSize=(prevLayerOutWidth-this.size)/this.stride+1,this.inMapValuesCount=Math.pow(prevLayerOutWidth,2),this.outMapSize%1!=0)throw new Error("Misconfigured hyperparameters. Activation volume dimensions would be "+this.outMapSize+" in pool layer at index "+layerIndex);this.activations=[].concat(_toConsumableArray(new Array(this.channels))).map(function(channel){return[].concat(_toConsumableArray(new Array(_this10.outMapSize))).map(function(row){return[].concat(_toConsumableArray(new Array(_this10.outMapSize))).map(function(v){return 0})})}),this.errors=[].concat(_toConsumableArray(new Array(this.channels))).map(function(channel){return[].concat(_toConsumableArray(new Array(prevLayerOutWidth))).map(function(row){return[].concat(_toConsumableArray(new Array(prevLayerOutWidth))).map(function(v){return 0})})}),this.indeces=this.activations.map(function(channel){return channel.map(function(row){return row.map(function(v){return[0,0]})})})}},{key:"forward",value:function(){for(var channel=0;channel<this.channels;channel++)if(NetMath.maxPool(this,channel),this.activation)for(var row=0;row<this.outMapSize;row++)for(var col=0;col<this.outMapSize;col++)this.activations[channel][row][col]=this.activation(this.activations[channel][row][col],!1,this.net)}},{key:"backward",value:function(){for(var channel=0;channel<this.channels;channel++)for(var row=0;row<this.errors[0].length;row++)for(var col=0;col<this.errors[0].length;col++)this.errors[channel][row][col]=0;if(this.nextLayer instanceof FCLayer)for(var _channel=0;_channel<this.channels;_channel++)for(var _row5=0;_row5<this.outMapSize;_row5++)for(var _col5=0;_col5<this.outMapSize;_col5++)for(var rowI=this.indeces[_channel][_row5][_col5][0]+_row5*this.stride,colI=this.indeces[_channel][_row5][_col5][1]+_col5*this.stride,weightIndex=(Math.pow(this.outMapSize,2),this.outMapSize,_channel*Math.pow(this.outMapSize,2)+_row5*this.outMapSize+_col5),neuron=0;neuron<this.nextLayer.neurons.length;neuron++)this.errors[_channel][rowI][colI]+=this.nextLayer.neurons[neuron].error*this.nextLayer.neurons[neuron].weights[weightIndex];else if(this.nextLayer instanceof ConvLayer)for(var _channel2=0;_channel2<this.channels;_channel2++){for(var errs=[],_col6=0;_col6<this.outMapSize;_col6++)errs[_col6]=0;NetUtil.buildConvErrorMap(this.nextLayer,errs,_channel2);for(var _row6=0;_row6<this.outMapSize;_row6++)for(var _col7=0;_col7<this.outMapSize;_col7++){var _rowI=this.indeces[_channel2][_row6][_col7][0]+_row6*this.stride,_colI=this.indeces[_channel2][_row6][_col7][1]+_col7*this.stride;this.errors[_channel2][_rowI][_colI]+=errs[_row6][_col7]}}else for(var _channel3=0;_channel3<this.channels;_channel3++)for(var _row7=0;_row7<this.outMapSize;_row7++)for(var _col8=0;_col8<this.outMapSize;_col8++){var _rowI2=this.indeces[_channel3][_row7][_col8][0]+_row7*this.stride,_colI2=this.indeces[_channel3][_row7][_col8][1]+_col8*this.stride;this.errors[_channel3][_rowI2][_colI2]+=this.nextLayer.errors[_channel3][_row7][_col8]}if(this.activation)for(var _channel4=0;_channel4<this.channels;_channel4++)for(var _row8=0;_row8<this.indeces[_channel4].length;_row8++)for(var _col9=0;_col9<this.indeces[_channel4].length;_col9++){var _rowI3=this.indeces[_channel4][_row8][_col9][0]+_row8*this.stride,_colI3=this.indeces[_channel4][_row8][_col9][1]+_col9*this.stride;this.errors[_channel4][_rowI3][_colI3]*=this.activation(this.errors[_channel4][_rowI3][_colI3],!0,this.net)}}},{key:"resetDeltaWeights",value:function(){}},{key:"applyDeltaWeights",value:function(){}},{key:"toJSON",value:function(){return{}}},{key:"fromJSON",value:function(){}}]),PoolLayer}();"undefined"==typeof window&&(exports.PoolLayer=PoolLayer);
//# sourceMappingURL=dist/jsNet.min.js.map