"use strict";function _toConsumableArray(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),Layer=function(){function t(e,n){_classCallCheck(this,t),this.size=e,this.neurons=[].concat(_toConsumableArray(new Array(e))).map(function(t,e){return new Neuron(n?n[e]:void 0)})}return _createClass(t,[{key:"assignNext",value:function(t){this.nextLayer=t}},{key:"assignPrev",value:function(t){this.prevLayer=t,this.neurons.forEach(function(e){return e.init(t.size)})}},{key:"forward",value:function(t){var e=this;this.neurons.forEach(function(t,n){t.sum=t.bias,e.prevLayer.neurons.forEach(function(e,n){return t.sum+=e.activation*t.weights[n]}),t.activation=e.activation(t.sum)})}},{key:"backward",value:function(t){var e=this;this.neurons.forEach(function(n,r){void 0!==t?n.error=t[r]-n.activation:(n.derivative=e.activation(n.sum,!0),n.error=n.derivative*e.nextLayer.neurons.map(function(t){return t.error*t.weights[r]}).reduce(function(t,e){return t+e},0)),n.weights.forEach(function(t,r){n.deltaWeights[r]+=n.error*e.prevLayer.neurons[r].activation}),n.deltaBias=n.error})}}]),t}();"undefined"==typeof window&&(global.Layer=Layer);var NetMath=function(){function t(){_classCallCheck(this,t)}return _createClass(t,null,[{key:"sigmoid",value:function(e,n){return n?t.sigmoid(e)*(1-t.sigmoid(e)):1/(1+Math.exp(-e))}},{key:"crossEntropy",value:function(t,e){return e.map(function(e,n){return t[n]*Math.log(e+1e-15)+(1-t[n])*Math.log(1+1e-15-e)}).reduce(function(t,e){return t-e},0)}},{key:"meanSquaredError",value:function(t,e){return t.map(function(t,n){return Math.pow(t-e[n],2)}).reduce(function(t,e){return t+e},0)/t.length}},{key:"noAdaptiveLR",value:function(t,e){return t+this.learningRate*e}},{key:"gain",value:function(t,e,n,r,i){var a=t+this.learningRate*e*n;return a<=0&&t>0||a>=0&&t<0?null!=i?r.weightGains[i]=Math.max(.95*r.weightGains[i],.5):r.biasGain=Math.max(.95*r.biasGain,.5):null!=i?r.weightGains[i]=Math.min(r.weightGains[i]+.05,5):r.biasGain=Math.min(r.biasGain+.05,5),a}},{key:"softmax",value:function(t){var e=t.reduce(function(t,e){return t+e},0);return t.map(function(t){return t/e})}}]),t}();"undefined"==typeof window&&(global.NetMath=NetMath);var Network=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.learningRate,r=void 0===n?.2:n,i=e.layers,a=void 0===i?[]:i,s=e.adaptiveLR,o=e.activation,u=void 0===o?"sigmoid":o,h=e.cost,c=void 0===h?"crossEntropy":h;if(_classCallCheck(this,t),this.state="not-defined",this.layers=[],this.epochs=0,this.iterations=0,this.learningRate=r,this.weightUpdateFn=NetMath[s||"noAdaptiveLR"],this.activation=NetMath[u],this.cost=NetMath[c],a.length)switch(!0){case a.every(function(t){return Number.isInteger(t)}):this.layers=a.map(function(t){return new Layer(t)}),this.state="constructed",this.initLayers();break;case a.every(function(t){return t instanceof Layer}):this.state="constructed",this.layers=a,this.initLayers();break;case a.every(function(t){return t===Layer}):this.state="defined",this.definedLayers=a;break;default:throw new Error("There was an error constructing from the layers given.")}}return _createClass(t,[{key:"initLayers",value:function(t,e){var n=this;switch(this.state){case"initialised":return;case"defined":this.layers=this.definedLayers.map(function(r,i){if(!i)return new r(t);if(i==n.definedLayers.length-1)return new r(e);var a=n.definedLayers.length-2,s=t/e>5?e+(e+Math.abs(t-e)/4)*(a-i+1)/(a/2):t>=e?t+e*(a-i)/(a/2):e+t*(a-i)/(a/2);return new r(Math.max(Math.round(s),0))});break;case"not-defined":this.layers[0]=new Layer(t),this.layers[1]=new Layer(Math.ceil(t/e>5?e+Math.abs(t-e)/4:t+e)),this.layers[2]=new Layer(Math.ceil(e))}this.layers.forEach(this.joinLayer.bind(this)),this.state="initialised"}},{key:"joinLayer",value:function(t,e){t.activation=this.activation,e&&(this.layers[e-1].assignNext(t),t.assignPrev(this.layers[e-1]))}},{key:"forward",value:function(t){if("initialised"!=this.state)throw new Error("The network layers have not been initialised.");if(void 0===t)throw new Error("No data passed to Network.forward()");return t.length!=this.layers[0].neurons.length&&console.warn("Input data length did not match input layer neurons count."),this.layers[0].neurons.forEach(function(e,n){return e.activation=t[n]}),this.layers.forEach(function(e,n){return n&&e.forward(t)}),this.layers[this.layers.length-1].neurons.map(function(t){return t.activation})}},{key:"backward",value:function(t){if(void 0===t)throw new Error("No data passed to Network.backward()");t.length!=this.layers[this.layers.length-1].neurons.length&&console.warn("Expected data length did not match output layer neurons count."),this.layers[this.layers.length-1].backward(t);for(var e=this.layers.length-2;e>0;e--)this.layers[e].backward()}},{key:"train",value:function(t){var e=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=n.epochs,i=void 0===r?1:r,a=n.callback;return new Promise(function(n,r){void 0!==t&&null!==t||r("No data provided"),"initialised"!=e.state&&e.initLayers(t[0].input.length,(t[0].expected||t[0].output).length);var s=0,o=0,u=0,h=function(){e.epochs++,s=0,c()},c=function c(){if(!t[s].hasOwnProperty("input")||!t[s].hasOwnProperty("expected")&&!t[s].hasOwnProperty("output"))return r("Data set must be a list of objects with keys: 'input' and 'expected' (or 'output')");e.resetDeltaWeights();var l=t[s].input,f=e.forward(l),d=t[s].expected||t[s].output;e.backward(d),e.applyDeltaWeights();var y=e.cost(d,f);u+=y,"function"==typeof a&&a({iterations:e.iterations,error:y,input:l}),e.iterations++,++s<t.length?setTimeout(c.bind(e),0):(o++,console.log("Epoch: "+o+" Error: "+u/100),o<i?h():n())};h()})}},{key:"test",value:function(t){var e=this;return new Promise(function(n,r){void 0!==t&&null!==t||r("No data provided");var i=0,a=0;!function r(){console.log("Testing iteration",a+1,i/(a+1)/100);var s=e.forward(t[a].input),o=t[a].expected||t[a].output;i+=e.cost(o,s),++a<t.length?setTimeout(r.bind(e),0):n(i/t.length/100)}()})}},{key:"resetDeltaWeights",value:function(){this.layers.forEach(function(t,e){e&&t.neurons.forEach(function(t){t.deltaWeights=t.weights.map(function(t){return 0})})})}},{key:"applyDeltaWeights",value:function(){var t=this;this.layers.forEach(function(e,n){n&&e.neurons.forEach(function(e){e.deltaWeights.forEach(function(n,r){e.weights[r]=t.weightUpdateFn.bind(t,e.weights[r],n,e.weightGains[r],e,r)()}),e.bias=t.weightUpdateFn.bind(t,e.bias,e.deltaBias,e.biasGain,e)()})})}},{key:"toJSON",value:function(){return{layers:this.layers.map(function(t){return{neurons:t.neurons.map(function(t){return{bias:t.bias,weights:t.weights}})}})}}},{key:"fromJSON",value:function(t){if(void 0===t||null===t)throw new Error("No JSON data given to import.");this.layers=t.layers.map(function(t){return new Layer(t.neurons.length,t.neurons)}),this.state="constructed",this.initLayers()}}]),t}();"undefined"==typeof window&&(global.Network=Network);var Neuron=function(){function t(e){_classCallCheck(this,t),e&&(this.imported=!0,this.weights=e.weights||[],this.bias=e.bias)}return _createClass(t,[{key:"init",value:function(t){this.imported||(this.weights=[].concat(_toConsumableArray(new Array(t))).map(function(t){return.2*Math.random()-.1}),this.bias=.2*Math.random()-.1),this.deltaWeights=this.weights.map(function(t){return 0}),this.weightGains=[].concat(_toConsumableArray(new Array(t))).map(function(t){return 1}),this.biasGain=1}}]),t}();"undefined"==typeof window&&(global.Neuron=Neuron);
//# sourceMappingURL=dist/Network.min.js.map